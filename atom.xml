<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Robot]]></title>
  <subtitle><![CDATA[Code First！Code Review！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://molloc.com/"/>
  <updated>2015-06-11T06:46:53.887Z</updated>
  <id>http://molloc.com/</id>
  
  <author>
    <name><![CDATA[Lcyan]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[切分Tomcat的catalina.out文件,解决日志文件过大的问题]]></title>
    <link href="http://molloc.com/2015/06/11/%E5%88%87%E5%88%86Tomcat%E7%9A%84catalina-out%E6%96%87%E4%BB%B6-%E8%A7%A3%E5%86%B3%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E8%BF%87%E5%A4%A7%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://molloc.com/2015/06/11/切分Tomcat的catalina-out文件-解决日志文件过大的问题/</id>
    <published>2015-06-11T06:15:55.000Z</published>
    <updated>2015-06-11T06:46:53.887Z</updated>
    <content type="html"><![CDATA[<p>Tomcat 下日志文件 catalina.out 过大，几百兆或几个G，进而造成再也无法写入更多的日志内容，至使 Tomcat 无法处理请求。需然你可以在 $TOMCAT_HOME/logs 目录下看到有 catalina.2012-09-16.log 这样分日期的归档，但是主文件 catalina.out 却一直在膨胀。</p>
<p>你可以每次手工或定时(crontab/计划任务)清理 catalina.out 文件，或是规划好日志输出(终究也会有满的时候)。再就是有两种较好的解决方案去真正的切分 catalina.out 文件，让 catalina.out 只存有最新的日志。</p>
<p>Linux 下使用 cronolog 工具来切分 catalina.out</p>
<h2 id="安装cronolog-以centos为例"><a class="header-anchor" href="#安装cronolog-以centos为例"></a>安装cronolog, 以CentOS为例</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install cronolog</span><br></pre></td></tr></table></figure>
<h2 id="编辑-bin-catalina-sh-文件"><a class="header-anchor" href="#编辑-bin-catalina-sh-文件"></a>编辑 bin/catalina.sh 文件</h2>
<ul>
<li>找到下面行并把它用 # 注释掉</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="string">"<span class="variable">$CATALINA_BASE</span>"</span>/logs/catalina.out</span><br></pre></td></tr></table></figure>
<ul>
<li>在新 Tomcat7 的 bin/catalina.sh 文件要注释的行是</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="string">"<span class="variable">$CATALINA_OUT</span>"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>替换下面的行(有两处，不过一般在 -security 中的那一行不需要去关注，不妨两处全替换了)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"<span class="variable">$CATALINA_BASE</span>"</span>/logs/catalina.out <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line">//为</span><br><span class="line"><span class="number">2</span>&gt;&amp;<span class="number">1</span> |/usr/<span class="built_in">local</span>/sbin/cronolog <span class="string">"<span class="variable">$CATALINA_BASE</span>/logs/catalina.%Y-%m-%d.log"</span> &amp;</span><br></pre></td></tr></table></figure>
<ul>
<li>在 Tomcat7 的 bin/catalina.sh 中是需要替换行是</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"<span class="variable">$CATALINA_OUT</span>"</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> <span class="string">"&amp;"</span></span><br><span class="line">//为</span><br><span class="line"><span class="number">2</span>&gt;&amp;<span class="number">1</span> |/usr/<span class="built_in">local</span>/sbin/cronolog <span class="string">"<span class="variable">$CATALINA_BASE</span>/logs/catalina.%Y-%m-%d.log"</span> &amp;</span><br></pre></td></tr></table></figure>
<ul>
<li>为什么 Tomcat7 后会有所不同，因为在它的 catalina.sh 文件中有如下定义</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OUT=<span class="string">"<span class="variable">$CATALINA_BASE</span>"</span>/logs/catalina.out</span><br></pre></td></tr></table></figure>
<h2 id="保存-catalina-sh-文件-重启-tomcat-即可"><a class="header-anchor" href="#保存-catalina-sh-文件-重启-tomcat-即可"></a>保存 catalina.sh 文件，重启 Tomcat 即可</h2>
<p>以后看到 $TOMCAT_HOME/logs/ 下的就是 catalina-2012-09-16.out, catalina-2012-09-17.out ...... 一系列文件，好像cronolog 又没提供方式来控制归档的日志文件个数。</p>
<p>而且这样之后，将不会产生 catalina.out 文件了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Tomcat 下日志文件 catalina.out 过大，几百兆或几个G，进而造成再也无法写入更多的日志内容，至使 Tomcat 无法处理请求。需然你可以在 $TOMCAT_HOME/logs 目录下看到有 catalina.2012-09-16.log 这样分日期的归档，]]>
    </summary>
    
      <category term="tomcat" scheme="http://molloc.com/tags/tomcat/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[面试题之encode,decode]]></title>
    <link href="http://molloc.com/2015/06/09/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8Bencode-decode/"/>
    <id>http://molloc.com/2015/06/09/面试题之encode-decode/</id>
    <published>2015-06-09T04:14:06.000Z</published>
    <updated>2015-06-09T09:29:23.566Z</updated>
    <content type="html"><![CDATA[<p>用Java语言实现两个函数encode()和decode(),分别实现对字符串的变换和复原,变换函数encode()顺序考察已知字符串的字符,按以下规则逐组生成新字符串:</p>
<ol>
<li>若已知字符串的当前字符不是大于0的数字字符,则复制该字符于新字符串中.</li>
<li>若已知字符串的当前字符是一个数字字符,且它之后没有后续字符,则简单地将它复制到新字符中.</li>
<li>若已知字符串的当前字符是一个大于0的数字字符,并且还有后继字符,设该数字字符的面值为n,则将它的后继字符(包括后继字符是一个数字字符)重复复制n+1次到新字符串中.</li>
<li>若已知字符串的当前字符是下划线,则将当前字符变换为用'\UL'</li>
<li>以上一次变换为一组,在不同组之间另插入一个下划线'_',用于分隔.</li>
</ol>
<p>例如: encode()函数对字符串<code>24ab_2t2</code>的变换结果为:<code>444_aaaaa_a_b_\UL_ttt_t_2</code></p>
<a id="more"></a>
<h2 id="字符串的变换"><a class="header-anchor" href="#字符串的变换"></a>字符串的变换</h2>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 字符串的变换</span><br><span class="line"> * <span class="doctag">@param</span> in</span><br><span class="line"> * <span class="doctag">@return</span></span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(String in)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// in  -&gt; 24ab_2t2</span></span><br><span class="line">	<span class="comment">// out -&gt; 444_aaaaa_a_b_\UL_ttt_t_2</span></span><br><span class="line">	<span class="keyword">final</span> StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">""</span>);</span><br><span class="line">	<span class="keyword">int</span> len = in.length();</span><br><span class="line">	<span class="keyword">int</span> lastPoit = len - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[len];</span><br><span class="line">	in.getChars(<span class="number">0</span>, len, chars, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">		<span class="keyword">char</span> c = chars[i];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">boolean</span> append = (i != lastPoit);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">switch</span> (c) &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'0'</span>:<span class="comment">// --&gt; (1)</span></span><br><span class="line">			sb.append(c);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'_'</span>:<span class="comment">// --&gt; (4)</span></span><br><span class="line">			sb.append(<span class="string">"\\UL"</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">if</span> (c &gt;= <span class="string">'1'</span> &amp;&amp; c &lt;= <span class="string">'9'</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (i == lastPoit) &#123;<span class="comment">// --&gt; (2)</span></span><br><span class="line">					sb.append(c);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123; <span class="comment">// --&gt; (3)</span></span><br><span class="line">					<span class="keyword">char</span> repeat = chars[i + <span class="number">1</span>];</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= Character.getNumericValue(c); j++) &#123;</span><br><span class="line">						sb.append(repeat);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				sb.append(c); <span class="comment">// --&gt; (1)</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (append) &#123;</span><br><span class="line">			sb.append(<span class="string">'_'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="字符串复原"><a class="header-anchor" href="#字符串复原"></a>字符串复原</h2>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 字符串复原</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> in</span><br><span class="line"> * <span class="doctag">@return</span></span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decode</span><span class="params">(String in)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// in  -&gt; 444_aaaaa_a_b_\UL_ttt_t_2</span></span><br><span class="line">	<span class="comment">// out -&gt; 24ab_2t2</span></span><br><span class="line">	<span class="keyword">final</span> StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">	String[] groups = in.split(<span class="string">"_"</span>);</span><br><span class="line">	<span class="keyword">for</span> (String str : groups) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> len = str.length();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (len == <span class="number">1</span>) &#123;</span><br><span class="line">			sb.append(str);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="string">"\\UL"</span>.equals(str)) &#123;</span><br><span class="line">			sb.append(<span class="string">"_"</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		sb.append(str.length() - <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>用Java语言实现两个函数encode()和decode(),分别实现对字符串的变换和复原,变换函数encode()顺序考察已知字符串的字符,按以下规则逐组生成新字符串:</p>
<ol>
<li>若已知字符串的当前字符不是大于0的数字字符,则复制该字符于新字符串中.</li>
<li>若已知字符串的当前字符是一个数字字符,且它之后没有后续字符,则简单地将它复制到新字符中.</li>
<li>若已知字符串的当前字符是一个大于0的数字字符,并且还有后继字符,设该数字字符的面值为n,则将它的后继字符(包括后继字符是一个数字字符)重复复制n+1次到新字符串中.</li>
<li>若已知字符串的当前字符是下划线,则将当前字符变换为用'\UL'</li>
<li>以上一次变换为一组,在不同组之间另插入一个下划线'_',用于分隔.</li>
</ol>
<p>例如: encode()函数对字符串<code>24ab_2t2</code>的变换结果为:<code>444_aaaaa_a_b_\UL_ttt_t_2</code></p>]]>
    
    </summary>
    
      <category term="java" scheme="http://molloc.com/tags/java/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nginx版本无缝升级]]></title>
    <link href="http://molloc.com/2015/06/08/Nginx%E7%89%88%E6%9C%AC%E6%97%A0%E7%BC%9D%E5%8D%87%E7%BA%A7/"/>
    <id>http://molloc.com/2015/06/08/Nginx版本无缝升级/</id>
    <published>2015-06-08T04:19:42.000Z</published>
    <updated>2015-06-08T04:23:29.333Z</updated>
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -V     <span class="comment">#查看版本</span></span><br><span class="line">nginx version: nginx/<span class="number">1.4</span>.<span class="number">3</span></span><br><span class="line">built by gcc <span class="number">4.4</span>.<span class="number">7</span> <span class="number">20120313</span> (Red Hat <span class="number">4.4</span>.<span class="number">7</span>-<span class="number">3</span>) (GCC)</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/<span class="built_in">local</span>/nginx --user=www --group=www</span><br><span class="line">                     --with-http_stub_status_module --with-http_ssl_module</span><br><span class="line">                     --with-http_flv_module --with-http_gzip_static_module</span><br><span class="line">                     --with-ld-opt=<span class="string">'-ljemalloc'</span> <span class="comment">#注意这里的编译项</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> lnmp/src</span><br><span class="line"></span><br><span class="line">wget http://nginx.org/download/nginx-<span class="number">1.4</span>.<span class="number">4</span>.tar.gz</span><br><span class="line"></span><br><span class="line">tar xzf nginx-<span class="number">1.4</span>.<span class="number">4</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> nginx-<span class="number">1.4</span>.<span class="number">4</span></span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --user=www</span><br><span class="line">                                      --group=www --with-http_stub_status_module</span><br><span class="line">                                      --with-http_ssl_module --with-http_flv_module</span><br><span class="line">                                      --with-http_gzip_static_module --with-ld-opt=<span class="string">'-ljemalloc'</span></span><br><span class="line">make    //注意只make  不要make install</span><br><span class="line"></span><br><span class="line">mv /usr/<span class="built_in">local</span>/nginx/sbin/nginx /usr/<span class="built_in">local</span>/nginx/sbin/nginx$(date +%m%d)    <span class="comment">#备份nginx原文件</span></span><br><span class="line"></span><br><span class="line">cp objs/nginx /usr/<span class="built_in">local</span>/nginx/sbin/nginx     <span class="comment">#复制编译make后的文件覆盖nginx原文件</span></span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -t     <span class="comment">#检测nginx文件配置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -USR2 `cat /usr/<span class="built_in">local</span>/nginx/logs/nginx.pid`    <span class="comment">#把nginx.pid改成nginx.pid.oldbin跟着启动新的nginx</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -QUIT `cat /usr/<span class="built_in">local</span>/nginx/logs/nginx.pid.oldbin`   <span class="comment">#退出旧的nignx</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class=]]>
    </summary>
    
      <category term="linux" scheme="http://molloc.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://molloc.com/tags/nginx/"/>
    
      <category term="探索发现" scheme="http://molloc.com/categories/%E6%8E%A2%E7%B4%A2%E5%8F%91%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Cars]]></title>
    <link href="http://molloc.com/2015/06/07/Cars/"/>
    <id>http://molloc.com/2015/06/07/Cars/</id>
    <published>2015-06-07T07:52:26.438Z</published>
    <updated>2015-06-07T07:52:26.431Z</updated>
    <content type="html"><![CDATA[<p>Founded in 1963, Automobili Lamborghini is headquartered in Sant’Agata Bolognese, in Northeastern Italy. There it manufactures some of the world’s most sought-after super sports cars. With the presentation of the Huracán LP 610-4, Lamborghini offers a new dimension in luxury super sports cars.
With 122 dealerships worldwide, Automobili Lamborghini is building on a succession of dynamic and elegant super sports cars including the 350GT, Miura, Espada, Countach, Diablo, Murciélago, Reventón Coupe, Reventón Roadster, Aventador and Gallardo.</p>
<p><img src="http://static.molloc.com/cars/1363048919SWhAHn.jpg" alt="Wallbase - dgnfly (wallbase.cc/wallpaper/1384450)" title="Car002"></p>
<a id="more"></a>
<p>At the  Beijing Motorshow 2014 Automobili Lamborghini is also going to present the Aventador in a highly exclusive and appealing configuration called Nazionale, realized  by Lamborghini Ad Personam, the personalization program that allows clients to create their own made-to-order Lamborghini.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Founded in 1963, Automobili Lamborghini is headquartered in Sant’Agata Bolognese, in Northeastern Italy. There it manufactures some of the world’s most sought-after super sports cars. With the presentation of the Huracán LP 610-4, Lamborghini offers a new dimension in luxury super sports cars.
With 122 dealerships worldwide, Automobili Lamborghini is building on a succession of dynamic and elegant super sports cars including the 350GT, Miura, Espada, Countach, Diablo, Murciélago, Reventón Coupe, Reventón Roadster, Aventador and Gallardo.</p>
<p><img src="http://static.molloc.com/cars/1363048919SWhAHn.jpg" alt="Wallbase - dgnfly (wallbase.cc/wallpaper/1384450)" title="Car002"></p>]]>
    
    </summary>
    
      <category term="Cars" scheme="http://molloc.com/tags/Cars/"/>
    
      <category term="美图世界" scheme="http://molloc.com/categories/%E7%BE%8E%E5%9B%BE%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello Hexo]]></title>
    <link href="http://molloc.com/2015/06/07/hello-hexo/"/>
    <id>http://molloc.com/2015/06/07/hello-hexo/</id>
    <published>2015-06-07T07:22:38.063Z</published>
    <updated>2015-06-07T07:22:38.055Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="quick-start"><a class="header-anchor" href="#quick-start"></a>Quick Start</h2>
<h3 id="create-a-new-post"><a class="header-anchor" href="#create-a-new-post"></a>Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<a id="more"></a>
### Run server
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="generate-static-files"><a class="header-anchor" href="#generate-static-files"></a>Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="header-anchor" href="#deploy-to-remote-sites"></a>Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start"><a class="header-anchor" href="#quick-start"></a>Quick Start</h2>
<h3 id="create-a-new-post"><a class="header-anchor" href="#create-a-new-post"></a>Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a></p>]]>
    
    </summary>
    
      <category term="探索发现" scheme="http://molloc.com/categories/%E6%8E%A2%E7%B4%A2%E5%8F%91%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux Kernel 4.1 将是下一个长期支持版]]></title>
    <link href="http://molloc.com/2015/06/06/Linux-Kernel-4-1-%E5%B0%86%E6%98%AF%E4%B8%8B%E4%B8%80%E4%B8%AA%E9%95%BF%E6%9C%9F%E6%94%AF%E6%8C%81%E7%89%88/"/>
    <id>http://molloc.com/2015/06/06/Linux-Kernel-4-1-将是下一个长期支持版/</id>
    <published>2015-06-06T00:43:07.000Z</published>
    <updated>2015-06-08T04:24:43.169Z</updated>
    <content type="html"><![CDATA[<p>Linux基金会长期支持计划项目组以及稳定内核分支维护者Greg Kroah-Hartman<a href="http://linux.slashdot.org/story/15/06/04/1341219/linux-kernel-41-will-be-an-lts-release" target="_blank" rel="external">证实</a>，下一个版本Linux Kernel 4.1将是一个长期支持版。长期支持内核针对的是嵌入式设备，嵌入式设备的生命期短更新更快，一般为两年左右，长期支持内核将提供两年的维护更新。</p>
<p>上一个 长期支持版是Linux 3.18，2014年12月发布，将一直支持到2017年1月。Kernel 4.1预计将在本月发布。</p>
<p><img src="http://static.molloc.com/img/201506/06081651_tmdK.png" style="display:block;margin:auto"></p>
<a id="more"></a>
<p><img src="http://static.molloc.com/img/201506/06081651_XC8U.png" style="display:block;margin:auto"></p>
<p><img src="http://static.molloc.com/img/201506/06081651_3uNy.png" style="display:block;margin:auto"></p>
<p><a href="http://www.oschina.net/news/63112/linux-kernel-41-will-be-an-lts-release" target="_blank" rel="external">原文地址</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Linux基金会长期支持计划项目组以及稳定内核分支维护者Greg Kroah-Hartman<a href="http://linux.slashdot.org/story/15/06/04/1341219/linux-kernel-41-will-be-an-lts-release">证实</a>，下一个版本Linux Kernel 4.1将是一个长期支持版。长期支持内核针对的是嵌入式设备，嵌入式设备的生命期短更新更快，一般为两年左右，长期支持内核将提供两年的维护更新。</p>
<p>上一个 长期支持版是Linux 3.18，2014年12月发布，将一直支持到2017年1月。Kernel 4.1预计将在本月发布。</p>
<p><img src="http://static.molloc.com/img/201506/06081651_tmdK.png" style="display:block;margin:auto"/></p>]]>
    
    </summary>
    
      <category term="kernel" scheme="http://molloc.com/tags/kernel/"/>
    
      <category term="linux" scheme="http://molloc.com/tags/linux/"/>
    
      <category term="探索发现" scheme="http://molloc.com/categories/%E6%8E%A2%E7%B4%A2%E5%8F%91%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[pmp计算题汇总]]></title>
    <link href="http://molloc.com/2015/06/02/pmp%E8%AE%A1%E7%AE%97%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://molloc.com/2015/06/02/pmp计算题汇总/</id>
    <published>2015-06-02T05:33:39.000Z</published>
    <updated>2015-06-07T07:53:53.817Z</updated>
    <content type="html"><![CDATA[<h2 id="回收期-payback-period"><a class="header-anchor" href="#回收期-payback-period"></a>回收期(Payback Period)</h2>
<ul>
<li>概念: 回收成本所需的时间</li>
<li>选择的原则: 越短越好</li>
</ul>
<h2 id="投资回报率-bcr"><a class="header-anchor" href="#投资回报率-bcr"></a>投资回报率(BCR)</h2>
<ul>
<li>有预期收益除以预期成本所得出的比例(投资一元钱带来几元钱的回报)</li>
<li>BCR的范围:
<ul>
<li>BCR = 1.0时,项目不陪不赚</li>
<li>BCR &gt; 1.0时,比例越高盈利越大</li>
<li>BCR = 1.0时,实施该项目会赔钱</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="投资利润率-roi"><a class="header-anchor" href="#投资利润率-roi"></a>投资利润率(ROI)</h2>
<ul>
<li>概念: 利润 = 收益 - 成本 - 税金</li>
<li>ROI的范围:
<ul>
<li>ROI = 1.0时,项目不陪不赚</li>
<li>ROI &gt; 1.0时,比例越高盈利越大</li>
<li>ROI = 1.0时,实施该项目会赔钱</li>
</ul>
</li>
</ul>
<h2 id="净现值-npv"><a class="header-anchor" href="#净现值-npv"></a>净现值(NPV)</h2>
<ul>
<li>概念: NPV = $∑[A/(1+r)^t -原始投入]$</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="回收期-payback-period"><a class="header-anchor" href="#回收期-payback-period"></a>回收期(Payback Period)</h2>
<ul>
<li>概念: 回收成本所需的时间</li>
<li>选择的原则: 越短越好</li>
</ul>
<h2 id="投资回报率-bcr"><a class="header-anchor" href="#投资回报率-bcr"></a>投资回报率(BCR)</h2>
<ul>
<li>有预期收益除以预期成本所得出的比例(投资一元钱带来几元钱的回报)</li>
<li>BCR的范围:
<ul>
<li>BCR = 1.0时,项目不陪不赚</li>
<li>BCR &gt; 1.0时,比例越高盈利越大</li>
<li>BCR = 1.0时,实施该项目会赔钱</li>
</ul>
</li>
</ul>]]>
    
    </summary>
    
      <category term="pmp" scheme="http://molloc.com/tags/pmp/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PMP考试总结]]></title>
    <link href="http://molloc.com/2015/05/27/PMP%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/"/>
    <id>http://molloc.com/2015/05/27/PMP考试总结/</id>
    <published>2015-05-27T15:11:32.000Z</published>
    <updated>2015-06-09T09:14:43.254Z</updated>
    <content type="html"><![CDATA[<ul>
<li>注意找题干,看清楚问什么</li>
<li>ROI = 年利润 / 投资额</li>
<li>风险 = 概率 * 进度影响度</li>
<li>SIPOC Supplier-供应者,Input-输入,Process-流程,Output-输出,Customer-客户</li>
<li>属性抽样(结果为合格不合适)</li>
<li>变量抽样(在连续的量表上标明结果所处的位置,表明合格的程度)</li>
<li>识别干系人归属于启动过程组</li>
<li>提前量为负,滞后量为正</li>
<li>预测型生命周期(计划驱动),适应型生命周期(变更驱动)</li>
<li>在FPIF(总价加激励费用合同),合同总价 = 实际成本 + 目标利润 + (目标成本 - 实际成本) * 卖方分享比例.</li>
<li>项目经理的重要职责之一就是管理干系人的期望</li>
<li>项目经理的另一项职责就是平衡干系人的不同利益</li>
<li>项目治理是一种符合组织治理模式的项目监管职能,覆盖整个项目生命周期</li>
<li>项目治理由项目组合,项目集或发起组织来定义,并要与之相适应,但要与组织治理分开</li>
</ul>
<a id="more"></a>
<h2 id="高效通过pmp考试试题"><a class="header-anchor" href="#高效通过pmp考试试题"></a>高效通过PMP考试试题</h2>
<ol>
<li>
<p>项目团队将不能如期完成一个客户可交付成果,项目经理首先应该 (A)</p>
<ul>
<li><strong>A. 与团队一起审查满足期限的选择方案</strong></li>
<li>B. 将进度变更通知干系人</li>
<li>C. 启动奖励体系,以便不会错过期限</li>
<li>D. 搜索风险管理计划,确定应对这项风险的正确措施</li>
</ul>
<p>解析:问题处理步骤和理念,顺序是得到实际数据-分析数据=解决问题.</p>
</li>
<li>
<p>在项目施工阶段,供应商处发生火灾,导致原材料的供应延迟了一周,项目经理识别了这个延误的风险,并包含在计划当中.发生这个事件之后,项目经理首先应该(D)</p>
<ul>
<li>A. 执行风险响应计划.</li>
<li>B. 由于材料延误,要求项目延期.</li>
<li>C. 更新项目基准</li>
<li><strong>D. 更新风险登记册</strong></li>
</ul>
<p>解析: 考点<strong>风险发生的处理步骤</strong>.题干是一个已知-未知的风险,第一步骤根据时间情况更新风险登记册.</p>
</li>
<li>
<p>你是一个跨部门项目的项目经理,有四个部门就内部技术规格难以达成一致,但又必须达成一致.采取折中的办法达成的结果无法让客户满意.你下一步应该做的是(C)</p>
<ul>
<li>A. 与客户沟通,请求其接受折中的设计结果.</li>
<li>B. 请销售人员合作,就可交付成果与客户讨论</li>
<li><strong>C. 停止折中的方法,要求各部门按照客户要求的产品特征更改设计</strong></li>
<li>D. 在项目状态记录中报告次情况.</li>
</ul>
<p>解析: 考点<strong>问题处理步骤和理念</strong>,客户利益第一为主要考点.</p>
</li>
<li>
<p>当项目进入执行阶段时,项目经理了解到团队成员在没有变更范围的情况下,加班进行预期之外的工作.出现这种情况的最大可能原因是(A)</p>
<ul>
<li><strong>A. 工作分解结果不充分.</strong></li>
<li>B. 沟通管理计划不明确</li>
<li>C. 活动持续时间估算不准确</li>
<li>D. 资源计划差</li>
</ul>
<p>解析: 考点<strong>WBS100%原则</strong>.题干<strong>没有变更范围的情况下</strong>做其他事表示范围蔓延,WBS就是把可交付成果分解成更易管理和跟踪的部分.如果做预期在外的工作,标识WBS分解不充分具有太多的灰色地带.</p>
</li>
<li>
<p>项目风险已被识别,并已制订详细的响应计划,最终进度和成本估算也已完成.项目经理接下来应该(C)</p>
<ul>
<li>A. 设计一份有效的沟通计划.</li>
<li>B. 执行项目,因为所以资料都已齐备.</li>
<li><strong>C. 获得干系人对项目计划的批准.</strong></li>
<li>D. 建立项目关键路径.</li>
</ul>
<p>解析: 考点<strong>项目管理计划批准</strong>.题干<strong>最终进度和成本估算也已完成</strong>表示项目管理计划已完成,接下需要的是获得批准,冲突答案是A,沟通管理计划属于项目管理子计划,项目管理计划完成表示沟通管理计划已完成.故排除.</p>
</li>
<li>
<p>项目处于执行阶段.若要减少项目中的威胁,项目经理应该(B)</p>
<ul>
<li>A. 跟新风险管理计划.</li>
<li><strong>B. 实施行动减轻项目风险</strong></li>
<li>C. 执行蒙特卡洛分析,并确定影响</li>
<li>D. 将风险因素报告给项目责任人,并征求决策.</li>
</ul>
<p>解析: 考点<strong>风险发生的步骤和策略</strong></p>
</li>
<li>
<p>以下那些过程定义了项目的总范围同时描述了在目前批准的项目范围说明里特定的工作?(A)</p>
<ul>
<li><strong>A. 工作分解结构.</strong></li>
<li>B. 材料清单.</li>
<li>C. 项目章程.</li>
<li>D. 需求分解结构.</li>
</ul>
<p>解析: 考点<strong>WBS的作用</strong>, WBS100%和范围说明书都体现项目总范围,题干<strong>特定的工作</strong>,则需要WBS分解成更易于管理的部分.</p>
</li>
<li>
<p>公司将成本确定为一个进展中的项目制约因素,可是当项目进行到一半的时候,成本投入影响到了项目的进度.若要恢复项目进度.项目经理应该使用(B)</p>
<ul>
<li>A. 关键路径法</li>
<li><strong>B. 快速跟进</strong></li>
<li>C. 赶工</li>
<li>D. 资源平衡</li>
</ul>
<p>解析: 考点<strong>进度压缩-快速跟进</strong>,如果成本影响到进度,需用快速跟进压缩进度,如果成本节余多,就用赶工.时间不够,有三个选项,但一般是进度压缩,资源不够,有两个选项可以选,关键链法和资源平衡.</p>
</li>
<li>
<p>在与项目团队成员的非正式谈话中,项目经理发现某个关键部分的供应商在执行一个以获得批准的产品变更时有问题.项目经理接下来应该执行下列那一项(A)</p>
<ul>
<li><strong>A. 实施对供应商的质量审计</strong></li>
<li>B. 安排一次变更控制会议</li>
<li>C. 衡量供应商的工作绩效</li>
<li>D. 与供应商的高级经理谈话</li>
</ul>
<p>解析: 考点<strong>控制采购工具采购绩效审查</strong>.可通过质量工具对卖方审查,目的在于发现履约情况的好坏.</p>
</li>
<li>
<p>项目团队审查了他们每月的项目质量测量指标.干系人要求新产品的投入废品率必须小于1%.若要满足这个要求,项目经理使用的方法或过程是(B)</p>
<ul>
<li>A. 统计抽样</li>
<li><strong>B. 过程分析</strong></li>
<li>C. 计划-实施-检查-行动</li>
<li>D. 标杆对照</li>
</ul>
<p>解析: 考点<strong>质量保证工具过程分析</strong>.<strong>审查他们每月的项目质量测量指标</strong>,说明跟过程有关,过程分析识别所需的改进,通过持续过程改进,可以减少浪费,消除非增值活动,使各过程在更高的效率与效果水平上运行.</p>
</li>
<li>
<p>项目经理发现对产品进行了多选细微的变更.虽然这些变更很细微,但他们没有在变更控制日志中被记录,也未获得客户的批准.若要确保类似的变更在项目中能得到正确的管理,项目经理应该(D)</p>
<ul>
<li>A. 确定与变更有关的成本,并向客户提供额外的工作账单</li>
<li>B. 告知客户进度已发生变更,并要求更多的资源</li>
<li>C. 在变更控制日志中记录变更,并审查潜在影响</li>
<li><strong>D. 与员工和客户审核变更控制流程</strong></li>
</ul>
<p>解析: 考点<strong>实施整体变更控制理念</strong>,如果变更会得到更好的管理,需变更控制流程</p>
</li>
<li>
<p>某个施工项目进入第三周,承包商发现一段地下水管道没有包含在合同范围内.他们接到客户代表的口头指令,将该水管绕出施工工地.承包商下一步应该(B)</p>
<ul>
<li>A. 按指示将水管改向</li>
<li><strong>B. 提交变更请求</strong></li>
<li>C. 分析变更的影响</li>
<li>D. 提出索赔</li>
</ul>
<p>解析: 考点<strong>实施整体变更控制步骤</strong>,变更可口头提出,当所有的变更请求需转化为书面的记录申请.</p>
</li>
<li>
<p>当前许多公司参与推广项目管理,通过培训可以取得很多定性和定量的结果,以下(A)是定性结果</p>
<ul>
<li><strong>A. 更高的士气(higher morale)</strong></li>
<li>B. 更高的利润率(higher profit ratio)</li>
<li>C. 工作的减少(deduction of work)</li>
<li>D. 更少的雇员(fewer staff)</li>
</ul>
<p>解析: 考点<strong>定性与定量术语</strong>,可进行客观衡量的术语定量,反之主观的衡量属于定性.</p>
</li>
<li>
<p>项目可交付成果交付给客户后,客户验收不满意,项目团队成员开始调查并分析原因,问这是属于以下那个过程(C)</p>
<ul>
<li>A. 质量审计</li>
<li>B. 质量改进</li>
<li><strong>C. 确认范围</strong></li>
<li>D. 绩效报告</li>
</ul>
<p>解析: 考点<strong>确认范围过程概念</strong>,与客户和发起人一同验收可交付成果.</p>
</li>
<li>
<p>采购经理以较高的价格购买了一种高级的设备类型.之后,项目经理得知改设备与项目合同中规定的设备类型不同,但是性能更好.项目经理接下来应该(D)</p>
<ul>
<li>A. 交付高级的设备类型,因为项目应急储备能够涵盖额外成本</li>
<li>B. 提出变更请求,获得发起人对于修改设备类型的批准</li>
<li>C. 上报发起人,因为已经超出项目经理的控制范围</li>
<li><strong>D. 使用合同中规定的设备类型替换设备</strong></li>
</ul>
<p>解析: 考点<strong>合同变更</strong>.合同具有法律性,应该严格按合同执行.</p>
</li>
<li>
<p>项目经理会见了一个主要的干系人.该干系人坚持认为,应在某日期完成项目,以便及时安排产品生产并参加某个贸易展览会.干系人还认为产品必须达到现行国际安全标准.只有接受这个条件,干系人才能提供项目所需启动金,项目经理将这些条件纳入下列的(C)</p>
<ul>
<li>A. 项目主要里程碑</li>
<li>B. 项目合同摘要</li>
<li><strong>C. 项目的概括性需求</strong></li>
<li>D. 项目退出标准</li>
</ul>
<p>解析: 考点<strong>项目章程的内容</strong>,题干<strong>某日期完成项目</strong>和<strong>必须达到现行国际安全标准</strong>都可以归属到概括性需求</p>
</li>
<li>
<p>为了限制与变更有关的风险,项目经理执行了一个审计,确保新的最小/最大限制要求能够被正确的执行.测试将会进行10次,测试结果将会用图标进行可视化分析.下列那一项质量工具将帮助项目经理判定测试是否成功(A)</p>
<ul>
<li><strong>A. 控制图</strong></li>
<li>B. 统计抽样</li>
<li>C. 帕累托图</li>
<li>D. 散点图</li>
</ul>
<p>解析: 考点<strong>质量七大工具-控制图</strong>,控制图用来确定一个过程是否稳定,或者是否具有可预测的绩效.</p>
</li>
<li>
<p>在项目执行阶段,项目经理意识到关键干系人未在登记册中记录.若要避免这种情况发生,在项目开始时应该采用下列哪一种技术?(B)</p>
<ul>
<li>A. 更新干系人登记册</li>
<li><strong>B. 进行干系人分析</strong></li>
<li>C. 确定干系人管理战略</li>
<li>D. 识别干系人</li>
</ul>
<p>解析: 考点<strong>识别干系人工具--干系人分析</strong></p>
</li>
<li>
<p>在向干系人提出项目管理计划时,项目经理注意到其中一名几乎没有组织权利的干系人表现出对项目没有兴趣.项目经理应使用(A)来管理该干系人.</p>
<ul>
<li><strong>A. 监督该干系人</strong></li>
<li>B. 密切关注该干系人</li>
<li>C. 保持让该干系人满意</li>
<li>D. 保持让该干系人获得通知</li>
</ul>
<p>解析: 考点<strong>识别干系人工具-干系人分析-权利/利益方格</strong>,对权利小,利益小的干系人可使用监督手段管理.</p>
</li>
<li>
<p>某项目经理目前负责一个项目,旨在推出一项新的网络服务.项目经理计划让支持团队执行此项工作.支持团队由于不具备必要的专业知识而不愿意承担工作,并声称他们从未听说过该项目,造成该问题的根本原因是(B)</p>
<ul>
<li>A. 未实施沟通管理计划</li>
<li><strong>B. 项目经理未能让所有干系人参与进来</strong></li>
<li>C. 支持团队不愿承担此工作</li>
<li>D. 项目经理为对缺乏专业知识的风险加以识别</li>
</ul>
<p>解析: 考点<strong>识别干系人过程概念</strong>.识别所有干系人.</p>
</li>
<li>
<p>项目经理主持一个建立数据在中心的项目.客户向项目经理提交了一份重大变更,坚称这项修改必须尽快包含在内.这涉及对预算和总体进度延迟的递增变化.项目经理接下来应该(A)</p>
<ul>
<li><strong>A. 建议客户将变更作为另一个项目启动</strong></li>
<li>B. 在下一次变更控制委员会会议上提交客户的请求</li>
<li>C. 包含客户的变更并重新制定预算和进度计划</li>
<li>D. 忽视该需求,因为有关项目的预算和进度基准已达成一致</li>
</ul>
<p>解析: 考点<strong>实施整体变更控制和理念</strong>.题干<strong>递增变化</strong>等重大变更可以建议客户启动变更,按步骤A应该在B之前,提交CCB前可先与客户讨论,在提交CCB审批.</p>
</li>
<li>
<p>干系人询问是否包含正确包含了最新的变更请求.若要向干系人展示这一点,项目经理应该使用(D)</p>
<ul>
<li>A. 过程分析</li>
<li>B. 帕累托图</li>
<li>C. 石川图</li>
<li><strong>D. 质量审计</strong></li>
</ul>
<p>解析: 考点<strong>质量保证工具-质量审计</strong>.质量审计还可确认已批准的变更请求(包括更新,纠正措施,缺陷补救,预防措施)的实施情况.</p>
</li>
<li>
<p>在一个施工项目的评审会上,一名团队成员提到一些设备运出的所在国家正在发生罢工.在核实完这个信息后,项目经理首先更新的文件是(C)</p>
<ul>
<li>A. 风险减去计划</li>
<li>B. 风险管理计划</li>
<li><strong>C. 风险登记册</strong></li>
<li>D. 风险日志</li>
</ul>
<p>解析: 考点<strong>风险发生处理步骤或策略</strong>.根据实际情况首先更新风险登记册.</p>
</li>
<li>
<p>在项目执行期间,团队成员通知项目经理,有一个工作包未到达质量标准,为了分析这种情况,项目经理希望与项目所有相关方开会.项目经理是在参与质量管理过程的(D)</p>
<ul>
<li>A. 监察质量</li>
<li>B. 监控项目工作</li>
<li>C. 实施质量保证</li>
<li><strong>D. 实施质量控制</strong></li>
</ul>
<p>解析: 考点<strong>质量三个过程</strong>,题干<strong>由一个工作包未到达质量保证</strong>是具体的可交付成果未达到质量标准而进行分析,属于质量控制</p>
</li>
<li>
<p>由于前面的项目经理管理不善,你被任命为项目B的新的项目经理.你在核对项目文件后发现,项目周期14个月中前8个月的主要资源都被更高级的项目A哪去了,无法参与项目B,第九个月开始才可能参与B项目,你做为项目经理应该(B)</p>
<ul>
<li>A. 与项目A的干系人协同,缩短资源在A的工作时间</li>
<li><strong>B. 审核项目B的情况,并与发起人商谈</strong></li>
<li>C. 前8个月继续项目,第九个月开始赶工争取按时完成B项目</li>
<li>D. 在风险登记册中记录,继续项目.</li>
</ul>
<p>解析: 考点<strong>问题步骤的处理理念</strong>.作为B项目的项目经理,需先分析B项目的情况,在申请帮助.</p>
</li>
<li>
<p>一个矩阵式组织中的项目经理正在为一个新项目配备人员资源.而该资源目前隶属于职能经理,并被分配到另一个项目中去了.项目经理应该使用的技术是(C)</p>
<ul>
<li>A. 招募</li>
<li>B. 事先指派</li>
<li><strong>C. 谈判</strong></li>
<li>D. 虚拟化</li>
</ul>
<p>解析: 考点<strong>组件项目团队工具-谈判</strong>.项目经理用谈判获得资源</p>
</li>
<li>
<p>项目经理登记了一项变更请求,并将其发给项目发起人批准,项目发起人回复说批准过程不是他们的责任.项目经理应该(A)</p>
<ul>
<li><strong>A. 与发起人一起查看批准的变更管理计划</strong></li>
<li>B. 与发起人一起定义和批准变更管理计划</li>
<li>C. 与发起人一起确定变更控制委员会的责任</li>
<li>D. 与发起人一起确认变更管理计划的批准</li>
</ul>
<p>解析: 考点<strong>实施整体变更控制的理念</strong>.变更的批准权限被规定在变更管理计划里面</p>
</li>
<li>
<p>如果你正在实施一个经常范围变更的项目,当你雇佣外部供应商完成部分工作时,(C)最有效.</p>
<ul>
<li>A. 成本补偿合同</li>
<li>B. 总价合同</li>
<li><strong>C. 工料合同</strong></li>
<li>D. 固定总价合同</li>
</ul>
<p>解析: 考点<strong>合同类型</strong>.首先识别角色是卖方,其次从范围判断,题干是<strong>范围经常变更</strong>,可排除B,D.站到角色的有利角度,选C对买方有利些</p>
</li>
<li>
<p>由于项目团队对可接受的团队成员行为期望方面存在误解,项目团队的绩效较差,项目经理接下来应该(B)</p>
<ul>
<li>A. 为预期行为制定基本准则</li>
<li><strong>B. 与团队成员开会,并审查基本规则</strong></li>
<li>C. 运行团队解决</li>
<li>D. 更新风险管理计划</li>
</ul>
<p>解析: 考点<strong>建设项目团队工具-基本准则</strong>.尽早制定并遵守明确的规则,有助于减少误解,提高生产力</p>
</li>
<li>
<p>指导委员会决定减轻一项已被识别的风险.项目经理接下来应该(B)</p>
<ul>
<li>A. 执行风险登记册中的措施</li>
<li><strong>B. 执行定性风险分析</strong></li>
<li>C. 从风险登记册中移除风险</li>
<li>D. 更新风险管理计划</li>
</ul>
<p>解析: 考点<strong>风险过程顺序</strong>.识别风险后需进行定性分析</p>
</li>
<li>
<p>项目经理正在制订一个项目计划.项目赞助人得知后,立即让项目经理针对项目成本评估,以满足未来财政预算的要求.项目经理采用以下那一项评估项目成本(C)</p>
<ul>
<li>A. 自下而上估算</li>
<li>B. 三点估算</li>
<li><strong>C. 类比估算</strong></li>
<li>D. 建立参数模型</li>
</ul>
<p>解析: 考点<strong>几种估算-类别估算</strong>,题干<strong>立即</strong>需快速得到估算结果,是类别估算的特征</p>
</li>
<li>
<p>项目团队完成对项目风险的评估,并识别一个权变解决方案,来减少七种一个风险项的潜在影响,下列那一项是这个提议解决方案的准确描述(C)</p>
<ul>
<li>A. 转移</li>
<li>B. 回避</li>
<li><strong>C. 减轻</strong></li>
<li>D. 接受</li>
</ul>
<p>解析: 考点<strong>规划风险应对策略</strong>.题干<strong>减少其中一个风险项的潜在影响</strong>是处理减轻或缓解的作用,就是通过策略减少风险的影响或概率.</p>
</li>
<li>
<p>一名团队成员要求更改某个项目活动的进度.项目经理应该采取的措施是(A)</p>
<ul>
<li><strong>A. 要求团队成员提供新的时间表来完成活动,并准备一份变更请求</strong></li>
<li>B. 询问完成该活动还需要多少时间和资金,然后准备一份变更请求</li>
<li>C. 与团队开会,确定还有那些其他活动可能会延迟,然后准备一份变更请求</li>
<li>D. 获得客户批准,与团队开会,并准备变更请求</li>
</ul>
<p>解析: 考点<strong>实施整体变更控制的步骤</strong>, 如要求更改需提交正式的变更请求处理.</p>
</li>
<li>
<p>关键路径上的某些任务发生延迟,项目经理立即决定对进度变量的不同组合加以分析,以使项目符合原交付日期,项目经理应该用(A)进度控制工具.</p>
<ul>
<li><strong>A. 假设情景分析</strong></li>
<li>B. 进度压缩</li>
<li>C. 资源平衡</li>
<li>D. 赶进度</li>
</ul>
<p>解析: 考点<strong>假设情景分析</strong>.题干<strong>不同组合加以分析</strong>是其特征,意思是如果情况X出现,情况Y会怎么样.</p>
</li>
<li>
<p>A项目总成本(6),贴现率(10%),总效率(12),B项目总成本(8),贴现率(10%),总效率(17),C项目总成本(6),贴现率(8%),总效率(12),A项目总成本(4),贴现率(8%),总效率(10),由于资金有限,只有一个项目可以实施.今年的投入需要等到明年年底才会有收益,从ROI的角度分析会选择哪一个项目(D)</p>
<ul>
<li>A. A</li>
<li>B. B</li>
<li>C. C</li>
<li><strong>D. D</strong></li>
</ul>
<p>解析: 考点<strong>成本术语-投资回报率ROI</strong>,除NPV和IRR外,其他成本术语不用考虑资金时间价值.ROI是静态的,年利润/投资额,是指每年的平均利润,选项A.(12-6)/6=1;选项B,(17-8)/8=9/8;选项C,(12-6)/6=1;选项D,(10-4)/4=6/4.选值大的那个.</p>
</li>
<li>
<p>一个组织的资源分配到项目中以后,会全职执行项目,但是可交付成果却移交给职能不能进行管理,这是什么样的组织类型?(B)</p>
<ul>
<li>A. 平衡性矩阵</li>
<li><strong>B. 项目型</strong></li>
<li>C. 职能组织</li>
<li>D. 紧密型矩阵</li>
</ul>
<p>解析: 考点<strong>组织架构</strong>.全职执行项目完成后直接转到运营,属于项目型特征.</p>
</li>
<li>
<p>在一个为期10个月的项目进行到第四个月时,项目经理意识到项目落后于进度,且进度偏移将会导致项目预算超支25%,为此项目经理创建了变更请求,但当项目经理创建了变更请求,但当项目经理寻求变更请求获取批准时,管理层却不愿意批准.管理层不愿批准的理由可能是(D)</p>
<ul>
<li>A. 缺乏项目管理计划批准</li>
<li>B. 缺乏风险管理计划批准</li>
<li>C. 缺乏沟通管理计划批准</li>
<li><strong>D. 缺乏变更管理计划批准</strong></li>
</ul>
<p>解析: 考点<strong>实施整体变更控制作用</strong>.变更管理计划规定变更批准权限.</p>
</li>
<li>
<p>项目经理被批准执行一个为期三年的项目.三个月后,PV = 100, EV = 80, AC = 90,项目经理计算完成进度绩效指数和成本绩效指数,下一步应该(A)</p>
<ul>
<li><strong>A. 偏差分析</strong></li>
<li>B. 更改成本和进度基准</li>
<li>C. 创建变更请求</li>
<li>D. 要求更多资金</li>
</ul>
<p>解析: 考点<strong>控制成本工具-绩效审查,偏差分析</strong>,可解释偏差的元婴,影响和纠正措施.</p>
</li>
<li>
<p>下面那种基线综合了范围,进度和成本?(C)</p>
<ul>
<li>A. 质量基线</li>
<li>B. 综合基线</li>
<li><strong>C. 绩效测量基线</strong></li>
<li>D. 总体下面基线</li>
</ul>
<p>解析: 考点<strong>绩效</strong>.测量绩效包括范围,进度和成本基准.</p>
</li>
<li>
<p>在项目中途, 一名团队成员告知项目经理,鉴于下面出现范围的复杂性高,进度严重滞后,估算也不准确等复杂情况,项目经理首先应该(C)</p>
<ul>
<li>A. 管理风险并实施风险响应活动</li>
<li>B. 分析报告以确定最佳的行动措施</li>
<li><strong>C. 收集并记录经验教训</strong></li>
<li>D. 执行详细分析,如需要的话,可提交变更请求.</li>
</ul>
<p>解析: 考点<strong>经验教训</strong> 指导与管理项目过程中,最后一项内容是收集和记录经验教训,并实施批准的过程改进活动.</p>
</li>
<li>
<p>根据干系人登记册和项目章程,项目的业务需求必须从组织的各职能组织获得.为了最终确定业务需求,要求这些职能组织的意见需要一致,应该使用哪一种工具和技术来收集需求?(B)</p>
<ul>
<li>A. 焦点小组法</li>
<li><strong>B. 引导式研讨会</strong></li>
<li>C. 问卷与调查</li>
<li>D. 德尔菲法</li>
</ul>
<p>解析: 考点<strong>收集需求工具-引导式研讨会</strong>.有利于取得一致意见,注意区别德尔菲(背靠背,匿名,旨在取得一致意见),研讨会是快速定义跨职能需求和协调干系人差异的重要技术.由于群体互动的特点，被有效引导的研讨会有助于参与者之间建立信任、
改进关系、改善沟通，从而有利于干系人达成一致意见。</p>
</li>
<li>
<p>一个项目严重拖期.项目需要赶进度,管理层要给原本一个人做的一项任务增加5个人,项目经理认为这样的作用不大,这是因为项目经理知道(A)</p>
<ul>
<li><strong>A. 收益递减法则</strong></li>
<li>B. 学习曲线</li>
<li>C. 沉没成本</li>
<li>D. 帕金斯定律</li>
</ul>
<p>解析: 考点<strong>收益递减规律</strong>,投人越多不代表收益越多.</p>
</li>
<li>
<p>一家公司第一次考虑全球发布一项新产品,必须确定项目是否值得投资,项目经理应该(C)</p>
<ul>
<li>A. 在项目章程中记录项目目标和商业论证,对项目的开展提出建议</li>
<li>B. 在项目范围说明书中记录项目目标和已知的可交付成果</li>
<li><strong>C. 记录项目的业务需求,并推荐一个为确定项目可行性而执行的可行性研究</strong></li>
<li>D. 在项目范围说明书张,记录高层次产品需求和干系人期望</li>
</ul>
<p>解析: 考点<strong>项目章程-项目选择</strong>, 是否值得投资需做可行性分析和商业论证.</p>
</li>
<li>
<p>制定项目章程时,一名关键干系人没有提供任何意见, 项目经理反复询问了该干系人提出必要的意见,以便完成宏观需求.虽然项目经理努力了,情况却没有得到改善.项目经理接下来应该(C)</p>
<ul>
<li>A. 将该干系人从干系人登陆册中移除.</li>
<li>B. 与项目团队假定需求</li>
<li><strong>C. 将缺失意见作为一项风险,添加到主要风险描述中.</strong></li>
<li>D. 将该问题上报给项目发起人.</li>
</ul>
<p>解析: 考点<strong>管理干系人参与</strong>,把干系人关注度作为风险管理,一旦发生用风险登记册进行管理.</p>
</li>
<li>
<p>项目管理办公室为客户完成了一个为期一年的资产管理项目,客户要求延长项目已涵盖其最近收到的资产,项目经理接下来应该执行下列那一项?(B)</p>
<ul>
<li>A.将变更提交给变更控制委员会批准</li>
<li><strong>B. 审查并分析客户的变更请求</strong></li>
<li>C. 拒绝接收变更单,并完成原始的工作范围</li>
<li>D. 发送一份回馈建议供客户考虑</li>
</ul>
<p>解析: 考点<strong>实施整体变更步骤</strong>,变更请求收到后需分析.</p>
</li>
<li>
<p>下列那一项包含了与偏差原因,选择纠正措施原因以及质量控制有关的信息?(C)</p>
<ul>
<li>A. 质量控制衡量</li>
<li>B. 合适的可交付成果</li>
<li><strong>C 经验教训</strong></li>
<li>D. 完整的核对表</li>
</ul>
<p>解析: 考点<strong>经验教训的内容</strong>,包括问题与风险的信息,以及适用于未来项目的有效技术的信息.</p>
</li>
<li>
<p>流程图通过SIPOC模型映射中的水平价值链的过程细节来显示五要素,以下不属于(C)SIPOC</p>
<ul>
<li>A. 供应商</li>
<li>B. 输入输出</li>
<li><strong>C. 决策点</strong></li>
<li>D. 客户</li>
</ul>
<p>解析:考点<strong>质量七个基本工具中的流程图</strong>,SIPOC模型中的五个字母分别是供应商,输入,过程,输出,客户.</p>
</li>
<li>
<p>在审查项目进度之后, 项目经理发现关键路径上的一个特定活动的独特的资源不能准时使用,但是在稍晚的日期可用.项目经理接下来应该(D)</p>
<ul>
<li>A. 采用关键路径法</li>
<li>B. 向管理层要求资源</li>
<li>C. 定义活动资源需求</li>
<li><strong>D. 应用关键链法</strong></li>
</ul>
<p>解析: 考点<strong>关键链</strong>, 考虑资源约束是关键链.关键链法（ CCM）是一种进度规划方法，允许项目团队在任何项目进度路径上设置缓冲，以应对资源限制和项目不确定性。</p>
</li>
<li>
<p>团队成员A希望离开团队,不断抱怨团队成员B的个性.项目经理应该(A)</p>
<ul>
<li><strong>A. 与两名团队成员分别谈话,了解他们当前关系的真是情况</strong></li>
<li>B. 告知团队成员A会把团队成员B从项目中开除</li>
<li>C. 解决团队成员之间的冲突,并促进方案的解决</li>
<li>D. 让团队成员尝试合作到项目结束未知</li>
</ul>
<p>解析: 考点<strong>冲突管理</strong>.在解决问题之前需先了解情况,最先考虑采用合作和面对的解决方法.A在C之前进行.无A这个答案可以选C.</p>
</li>
<li>
<p>你将使用什么工具帮助你识别项目风险和缓解计划以便支持项目进度?(D)</p>
<ul>
<li>A. 风险日志</li>
<li>B. 关键路径法</li>
<li>C. 风险和评估计划</li>
<li>D. <strong>进度网络分析</strong></li>
</ul>
<p>解析: 考点<strong>制定进度计划工具-进度网络分析</strong></p>
</li>
<li>
<p>工作分解结构建立后,项目经理通过头脑风暴启动了识别风险的过程.该过程指出了一些潜在的风险,项目经理应该(C)</p>
<ul>
<li>A. 更改项目范围以便回避风险</li>
<li>B. 接受风险并将其预期值纳入项目预算</li>
<li><strong>C. 确定潜在响应</strong></li>
<li>D. 实施变通方案以回避风险.</li>
</ul>
<p>解析: 考点<strong>风险过程概念-风险登记册更新内容</strong>,识别风险过程输出风险登记册除风险原因等级外,还包括潜在风险措施.</p>
</li>
<li>
<p>抽查了一些数量的产品,检查是不是合格,目的是判断与标准是不是符合,这种方法是(D)</p>
<ul>
<li>A. 变量抽样</li>
<li>B. 允差</li>
<li>C. 控制范围</li>
<li><strong>D. 属性抽样</strong></li>
</ul>
<p>解析: 考点<strong>质量术语-属性抽样</strong>,判断标准是合格不合格,变量抽样-在连续的量表上标明结果所处的位置,表明合格的程度.</p>
</li>
<li>
<p>在状态会议上,项目经理注意到项目超出预算,项目经理觉得应该早点发现这个问题,怎样做有助于提前发现这种情况(B)</p>
<ul>
<li>A. 项目开始之前,编制一份定义明确的项目章程</li>
<li><strong>B. 使用德尔菲技术,专门识别与成本有关的风险</strong></li>
<li>C. 在监控流程中使用成本管理计划</li>
<li>D. 定期计算进度偏差</li>
</ul>
<p>解析: 考点<strong>识别风险工具-信息收集技术/德尔菲技术</strong>.</p>
</li>
<li>
<p>从前一个项目中学到的经验教训对当前的范围说明书会产生的影响是(C)</p>
<ul>
<li>A. 由于工作分解结构是完整的,对范围说明书不会产生影响</li>
<li>B. 如果不忽视经验教训,范围说明书的制定会更快</li>
<li><strong>C. 在当前范围说明书中,将不大可能会重复过去的错误或失误</strong></li>
<li>D. 范围说明书将不会受到经验教训库的影响,因为所有项目都是独特的.</li>
</ul>
<p>解析: 考点<strong>经验教训</strong></p>
</li>
<li>
<p>在用户对项目可交付成果开展验收测试时,客户发现其中一个关键功能没有定义,项目经理应该与客户审查(B)</p>
<ul>
<li>A. 责任分配矩阵</li>
<li><strong>B. 需求跟踪矩阵</strong></li>
<li>C. 质量管理计划</li>
<li>D. 项目范围说明书</li>
</ul>
<p>解析: 考点<strong>收集需求输出-需求跟踪矩阵</strong>, 需求跟踪矩阵连接了需求和需求源,如果关键功能没有定义,表示需求没被明确或没被定义.如果关键功能在验收标准产生冲突,这个时候需选择D选项.</p>
</li>
<li>
<p>项目结束时,项目经理需要开展一次团队绩效审核,项目经理希望首先评估特定团队成员的绩效,若要正确开展审核,项目经理应该怎么对待这些成员个人(D)</p>
<ul>
<li>A. 将他们的绩效与其他团队成员比较</li>
<li>B. 同时于整组人员召开绩效审查会议</li>
<li>C. 关注对于特定行为范例的批评意见</li>
<li><strong>D. 处理团队和个人的行为</strong></li>
</ul>
<p>解析: 考点<strong>管理项目团队工具-项目绩效评估</strong>,包括澄清角色和职责,向团队成员提供建设性反馈,发现未知或未决问题,制定个人培训计划,以及确立未来目标,确定团队和个人双赢.</p>
</li>
<li>
<p>以下哪一个是对燃烧图的正确解释,除了(D)</p>
<ul>
<li>A. 是在项目完成之前,对需要完成的工作的一种可视化表示</li>
<li>B. 是一个向下的曲线,随着剩余工作的完成,'烧尽'至零</li>
<li>C. 燃尽图有一个Y轴(工作)和X轴(时间),长用户敏捷方法.</li>
<li><strong>D. 是一个向上的曲线, 随着工作的完成,将完成的总量标记到最高点</strong></li>
</ul>
<p>解析: 考点<strong>燃烧图/燃尽图的特征</strong>,燃尽图(Burn down chart)是在项目完成之前,对需要完成的工作的一种可视化表示.燃尽图有一个Y轴(工作)和X轴(时间).在理想情况下,该图表是一个向下的曲线,随着剩余工作量的完成,<strong>烧尽</strong>至零.这个词常常用户敏捷方法.</p>
</li>
<li>
<p>客户索取在某个项目中正在开发的产品的相关信息,但是可提供的产品信息极少.项目经理接下来应该制定(C)</p>
<ul>
<li>A. 工作分解结构</li>
<li>B. 干系人登记册</li>
<li><strong>C. 工作说明书</strong></li>
<li>D. 项目管理经理</li>
</ul>
<p>解析: 考点<strong>项目章程的输入-SOW</strong>, SOW内容包括产品概述性描述.</p>
</li>
<li>
<p>项目收尾时,项目经理应该执行以下那些工作(D)</p>
<ul>
<li>A. 材料处置,审查财富支付并汇报</li>
<li>B. 评估工作单, 完成财富支付并汇报</li>
<li>C. 审查经验教训,确定工作单并评估资源</li>
<li><strong>D. 关闭工作单,材料处置并转移资源</strong></li>
</ul>
<p>解析: 考点<strong>收尾步骤</strong></p>
</li>
<li>
<p>项目经理正在收尾一个两年期的项目,项目经理应在什么时候执行行政收尾?(B)</p>
<ul>
<li>A. 执行变更控制时</li>
<li><strong>B. 项目或阶段过程之后</strong></li>
<li>C. 经验教训总结过程之后</li>
<li>D. 结束采购过程之后</li>
</ul>
<p>解析: 考点<strong>五大过程组</strong>,在项目或阶段都需要进行收尾过程租包括行政收尾</p>
</li>
<li>
<p>在项目执行阶段,项目发生了很多变更,项目经理应该(B)</p>
<ul>
<li>A. 一直等待,知道了解所有的变更,然后打印一份新的进度表</li>
<li><strong>B. 根据需要要尽快实施被批准的变更,但是保留原有的进度基准</strong></li>
<li>C. 只实施管理层批注的变更</li>
<li>D. 实施任何变更前要通知管理层</li>
</ul>
<p>解析: 考点<strong>实施整体变更控制步骤和理念</strong>,执行过程租会对批准的变更请求进行实施,但原有的进度基准可作为前期版本保留以维护基准的严肃性.</p>
</li>
<li>
<p>公司获得一个价值数百万美元的合同,如果能按时完成,利润会很丰厚,项目团队急切地开始了他们的工作任务,为取得项目成功,下一步应(A)</p>
<ul>
<li><strong>A. 识别风险</strong></li>
<li>B. 召开项目启动大会</li>
<li>C. 开始进行WBS方面的工作</li>
<li>D. 开展团队建设活动</li>
</ul>
<p>解析: 考点<strong>项目章程的内容-高层级风险需识别</strong></p>
</li>
<li>
<p>项目接近完工,团队成员向项目经理报告了一个会影响到重要期限的问题.每周状态报告将如期发送至主要干系人.项目经理下一步该(D)</p>
<ul>
<li>A. 更新问题日志,通知发起人使用问题升级流程,向干系人报告可以延迟</li>
<li>B. 在下一次状态周报中通知干系人,与他们讨论可能的解决方案,并请求预算和进度延期</li>
<li>C. 核实该问题是否包含在风险计划中,如不在,则应将其包含在内,编制风险减轻计划</li>
<li><strong>D. 更新问题日志,将可帮助解决问题的所有人员包含在内,并与干系人就此问题进行沟通</strong></li>
</ul>
<p>解析: 考点<strong>问题日志</strong>.问题日志在干系人之间对问题达成共识.</p>
</li>
<li>
<p>下列哪一项应包含作为项目启动大会的讨论议题(A)</p>
<ul>
<li><strong>A. 主要风险,职责范围,高层次预算和进度</strong></li>
<li>B. 工作分解结构,详细进度,项目计划和风险登记册</li>
<li>C. 质量计划,预算,详细进度和工作分解结构</li>
<li>D. 章程,干系人分析,预算和项目计划.</li>
</ul>
<p>解析: 考点<strong>启动大会</strong>的内容.</p>
</li>
<li>
<p>项目一切进展顺利,突然几个干系人提出一些变更,所有变更确定后,项目经理开始与所有干系人讨论变更发生的原因,同时发觉是否还存在更多的变更.当一个成员突然提到他给产品增加了一项功能时,全场一片寂静.&quot;不要担心,我不会影响项目时间,成本及产品质量&quot;.他说.作为项目经理,你首先应该(D)</p>
<ul>
<li>A. 询问这位团队成员增加此项功能是如何确定的.</li>
<li>B. 召开会议,审查这位团队成员所完成的工作.</li>
<li>C. 寻找其他增加了的功能.</li>
<li><strong>D. 寻找这位项目团队成员,他们怎么知道不会影响进度,成本及质量</strong></li>
</ul>
<p>解析: 考点<strong>实施整体变更控制步骤</strong>.对实际发生的变更进行变更流程处理,选项D是最先处理的.</p>
</li>
<li>
<p>在获取项目资源的过程中,当无法快速定义一个精确项目工作说明说时,应该采用的合同是(D)</p>
<ul>
<li>A. 成本加奖励费用合同</li>
<li>B. 固定总价合同</li>
<li>C. 成本加激励费用合同</li>
<li><strong>D. 工料合同</strong></li>
</ul>
<p>解析: 考点<strong>合同类型-工料合同</strong>,工料合同是兼具成本补偿合同和总价合同的某些特点的混合型合同。在不能很快编写出准确工作说明书的情况下，经常使用工料合同来增加人员、聘请专家和寻求其他外部支持。注意题干<strong>无法快速定义</strong></p>
</li>
<li>
<p>从部门人员中被提拔的一位项目经理,被任命管理一个200W美元的项目,部门经理通知项目团队成员,两周以后进行项目章程评审,项目经理首先应该怎么做(B)</p>
<ul>
<li>A. 制定项目管理计划</li>
<li><strong>B. 会见项目发起人,重新评估商业目标</strong></li>
<li>C. 召开项目启动大会</li>
<li>D. 执行项目范围管理计划</li>
</ul>
</li>
<li>
<p>一个产品开发项目的关键部件遭遇供应链的中断,未来的部件交付将会延迟几个星期,结果会导致生产线停止.有一个替代供应商能够提供相同质量的部件.但是使用该替代供应商将需要变更技术规范.变更技术规范以及证明该部件合乎质量要求的成本为260W美元,而且需要八周时间,原始供应商的部件将会无限期延迟的可能行有50%.项目经理应该(B)</p>
<ul>
<li>A. 退出项目,直至规定部件继续供应未知</li>
<li><strong>B. 开展更换供应商对项目成本影响的定量风险分析</strong></li>
<li>C. 放弃风险分析,立即开始采用替代供应商,让项目保持进度</li>
<li>D. 采用替代供应商,并在一旦原始供应商能够继续交付时,平衡两家供应商的交付量.</li>
</ul>
<p>解析: 考点<strong>风险过程概念--定量风险分析</strong>.题干<strong>原始供应商的部件将会无限期延迟的可能性50%<strong>和</strong>新规范变更引起260W美元的成本增加</strong>都是重大风险,对项目目标影响的重点风险分析是定量风险分析的作用</p>
</li>
<li>
<p>你被委派接管一个项目,根据进度,该项目应该已经完成了一半.在评估之后,你发现项目远远落后于进度,可能要花之前的项目经理预计时间的2倍.但是,出资人听说项目和进度的时间一样,最好采取的行动是(B)</p>
<ul>
<li>A. 试着调整进度的结构以满足项目最后期限</li>
<li><strong>B. 向出资人报告你的评估</strong></li>
<li>C. 把项目推回给之前的项目经理</li>
<li>D. 按之前的项目经理计划的进度进行,在第一个里程碑时报告.</li>
</ul>
<p>解析: 考点<strong>问题处理步骤和策略</strong>, 用数据去面对</p>
</li>
<li>
<p>项目经理了解到主题专家(SME)正在考虑离开公司.该专家资源在其主题领域拥有深厚知识,很难被替代.为确保主题专家参与到项目中,项目经理与主题专家的经理讨论可能的措施.这些措施应记录在那份文件中?(B)</p>
<ul>
<li>A. 人力资源计划</li>
<li><strong>B. 风险登记册</strong></li>
<li>C. 风险管理计划</li>
<li>D. 组织分解结果</li>
</ul>
<p>解析: 考点<strong>风险登记册的作用</strong>,题干<strong>可能的措施</strong>是对未来的应对措施,故记录在风险登记册里面.</p>
</li>
<li>
<p>一名新项目经理被任命管理一个目前落后于进度的项目.新项目经理应使用挣值技术来确定下列那一项(D)</p>
<ul>
<li>A. 资源分解结构</li>
<li>B. 与进度延迟有关的风险</li>
<li>C. 项目中的范围蔓延</li>
<li><strong>D. 基准偏差</strong></li>
</ul>
<p>解析: 考点<strong>EVM的作用</strong>,与基准进行对比进行绩效分析.</p>
</li>
<li>
<p>项目经理在项目进展一半时发现,尚未咨询在项目相关领域具有专业知识的某关键功能的主观.应在何时确定该主管(B)</p>
<ul>
<li>A. 规划过程组</li>
<li><strong>B. 启动过程组</strong></li>
<li>C. 开展定性风险缝隙</li>
<li>D. 规划沟通</li>
</ul>
<p>解析: 考点<strong>过程和过程组</strong>, 题干是识别干系人,归属于启动过程组</p>
</li>
<li>
<p>项目经理创建了工作分解结构(WBS)和WBS词典.应该用什么要素确定工作包详细的层次(A)</p>
<ul>
<li><strong>A. 项目的复杂性</strong></li>
<li>B. WBS结构和格式</li>
<li>C. 自下而上法</li>
<li>D. 单个的工作组成部分</li>
</ul>
<p>解析: 考点<strong>WBS</strong>,WBS层次取决于项目复杂程度和大小</p>
</li>
<li>
<p>A公司为B公司知道了一份商业报价.B公司接受了报价,并要求A公司开始项目,公司A接下来应该(C)</p>
<ul>
<li>A. 组织项目团队和主要专家</li>
<li>B. 创建工作分解结果</li>
<li><strong>C. 准备项目高层次的范围</strong></li>
<li>D. 进行成本效益分析</li>
</ul>
<p>解析: 考点<strong>项目章程的内容</strong>, A公司开始项目, 需要制定项目章程,包括高层次的范围.</p>
</li>
<li>
<p>项目经理正在启动一个新项目,识别所有干系人的主要原因是(B)</p>
<ul>
<li>A. 识别成本并计划预算</li>
<li><strong>B. 了解预期期望,并将正面影响最大化</strong></li>
<li>C. 计划沟通和收集需求</li>
<li>D. 计划质量和识别风险</li>
</ul>
<p>解析: 考点<strong>干系人的管理目的</strong>,其目的就是了解和管理干系人的利益,期望,提高正面影响</p>
</li>
<li>
<p>项目经理向客户提交可交付成果以供批准.客户称可交付成果没有达到验收标准,并要求项目经理对可交付成果进行返工.客户还希望查看返工进度的相关信息.项目经理接下来应该执行的活动是(B)</p>
<ul>
<li>A. 配置识别</li>
<li><strong>B. 配置状态管理</strong></li>
<li>C. 配置控制</li>
<li>D. 配置合适和审计</li>
</ul>
<p>解析: 考点<strong>配置管理系统的步骤</strong>.记录项目信息归属第二步配置状态记录.</p>
</li>
<li>
<p>由于出现了未在风险登记薄中识别的意外变更请求,项目范围和成本在项目执行过程中发生改变,该成本将有那一项预算储备承担(A)</p>
<ul>
<li><strong>A. 管理储备</strong></li>
<li>B. 意外开支储备</li>
<li>C. 酌情储备</li>
<li>D. 应急储备</li>
</ul>
<p>解析: 考点<strong>风险类型和应对</strong>,题干中<strong>未在风险登记薄中识别的意外变更请求</strong>为未知-未知风险,需管理储备承担.</p>
</li>
<li>
<p>适应型生命周期与迭代和增量型生命周期的主要区别是(D)</p>
<ul>
<li>A. 适应型生命周期与迭代无关</li>
<li>B. 迭代和增量型生命周期一开始都明确范围</li>
<li>C. 迭代型生命周期的项目范围是一成不变的.</li>
<li><strong>D. 适应型生命周期的迭代速度更快</strong></li>
</ul>
<p>解析: 适应型生命周期与迭代和增量行生命周期都有迭代,当适应型生命周期迭代更快,而迭代和增量型生命周期适用于大型复杂项目的开发.</p>
</li>
</ol>
<h2 id="pmp真题回忆"><a class="header-anchor" href="#pmp真题回忆"></a>PMP真题回忆</h2>
<ol>
<li>
<p>一个月前,一项新规定获得变更控制委员会的批准,这项变更将要求团队项目交付日期,提前六个月,项目经理接下来应该怎么做(A)</p>
<ul>
<li><strong>A. 在整个项目过程中协调批准的变更.</strong></li>
<li>B. 搁置项目,并分析这项新规定的变更</li>
<li>C. 将该信息发送给项目团队,要求他们满足新的时间线</li>
<li>D. 向项目发起人报告影响并更新变更日志</li>
</ul>
<p>解析: 变更批准后, 要落实.分析影响应在变更前进行,包括通知,因此不选B,D,C不如A全面. A体现了整体性</p>
</li>
<li>
<p>项目选用了公司另一个项目的供应商,在执行阶段,供应商表示不能完成可交付成果,项目经理本应该使用那种工具(A)</p>
<ul>
<li><strong>A. 建议书评价分析</strong></li>
<li>B. 使用独立估算</li>
<li>C. 帕累托图</li>
<li>D. 使用风险定性分析</li>
</ul>
<p>解析: 选择了一个没有能力的供应商,是在规划,实施采购过程中出现了问题,A是一个充分理由,B只与价格有关,C是质量问题,D回避了本题中的人为原因.</p>
</li>
<li>
<p>项目一个可交付成果时,客户对可交付成果不满意,称一个需求被遗漏,且是以批准的变更请求,项目经理称从未听过该变更请求,接下来项目经理应干什么(C)</p>
<ul>
<li>A. 拒绝便跟,因为该变更请求没有</li>
<li>B. 实施变更, 因为关系到可交付成果的验收</li>
<li><strong>C. 重新提交变更请求</strong></li>
<li>D. 实施变更请求</li>
</ul>
<p>解析: 变更必须按流程进行,项目经理是变更的责任人,他不知道该变更,只能说明变更没有走正式流程,属于非法,应从头来过.</p>
</li>
<li>
<p>项目团队使用一种质量工具,能用图标描绘在一个组内出现的观测值概率,团队使用的是什么质量工具(B)</p>
<ul>
<li>A. 散点图</li>
<li><strong>B. 项目直方图</strong></li>
<li>C. 统计抽样</li>
<li>D. 项目核对表</li>
</ul>
<p>解析: 本题问属于质量工具的图标,可以显示观测值概率的.从图表概念说,AB视图,C不能叫图标,D是表不是图.直方图是显示不同缺陷发生频率或次数的,相对较接近.抽样只跟检查相关,强调非百分百检查,与题干无相干性.</p>
</li>
<li>
<p>一家公司正在开发系统,硬件采购,测试和安装都符合进度计划.但是竞争优先将导致软件开发延期三个月(C)</p>
<ul>
<li>A. 将该问题上报给项目发起人和关键干系人</li>
<li>B. 创建变更请求解决三个月延期</li>
<li><strong>C. 调查研究软件开发任务的替代方案</strong></li>
<li>D. 更新风险登记册,包含进度延期</li>
</ul>
<p>解析: 本题争议很大,今天答案所谓推荐,主要指本题.D也是一个很难排除的可选项,先解析C,遇到困难先想办法,找解决方案,这体现了项目经理的主动性,我个人认为,该选项最好.D将题目当成风险,先记录在登记册中,未尝不可,但从主动性来说,不如C,另外还有怨天尤人的感觉,风险一定程度上具有不可抗性,但本题有事在人为的性质,不能完全当成风险.B选择应该在C,D之后在考虑,即便如此,本题的答案是有探讨空间的,欢迎发表意见.</p>
</li>
<li>
<p>项目接近尾声, 项目时间受限, 项目发起人要求项目提前三周完成, 项目经理接下来应该(C)</p>
<ul>
<li>A. 拒绝变更,因为提交变更的时机太晚.</li>
<li>B. 着手变更实施.</li>
<li><strong>C. 针对变更提出解决方案, 提交高级管理层</strong></li>
<li>D. 针对变更提出解决方案, 发给团队.</li>
</ul>
<p>解析: 变更题目应选择最符合流程的,C最好,有人选A,首先项目还没完成,解决尾声而已,另外即便项目收尾,正确答案应该是建议另立项目.拒绝变更永远不要选.</p>
</li>
<li>
<p>一个满足时间和预算要求的系统升级项目开始进行初步验收测试.由于系统中使用的术语不准确,系统受到来自员工的低满意度调查评价,为避免这种情况,应该事先执行什么工作(B)</p>
<ul>
<li>A. 通过使用德尔菲研究识别最常用的术语</li>
<li><strong>B. 在识别干系人的过程中,了解员工干系人群体的组织文化</strong></li>
<li>C. 向管理层提交一份重要的问题清单</li>
<li>D. 创建流程,让员工熟悉行业标准.</li>
</ul>
<p>解析: 可把题目概况为: 干系人不满意, 这属于干系人问题, 按该问题套路. 选B.</p>
</li>
<li>
<p>分包商的公司不能根据合同条款执行服务,项目经理接下来应该怎么做?(A)</p>
<ul>
<li><strong>A. 查看采购协议中的提前终止条款</strong></li>
<li>B. 与团队成员头脑风暴</li>
<li>C. 更新风险管理计划</li>
<li>D. 请求与项目发起人开会</li>
</ul>
<p>解析: 供应商不能履行合同条款,注意是不能而非没有,此时只能更换供应商,要先终止合同,可理解问违约终止.</p>
</li>
<li>
<p>以下哪项是整合管理过程的内容(A)</p>
<ul>
<li><strong>A. 监控项目工作</strong></li>
<li>B. 制定人力资源管理计划</li>
<li>C. 实施质量保证</li>
<li>D. 报告绩效</li>
</ul>
<p>解析: 第四章是整合管理,包括6个过程,只有A是.</p>
</li>
<li>
<p>项目团队与第三方供应商合作采购正在开发的设备.第三方供应商拒绝接受如果项目期间成本增加的风险,项目团队希望尽量减少设备质量差的风险,什么样的合同类型对项目团队和第三方供应商都有利(A)</p>
<ul>
<li><strong>A. 成本加激励费用合同</strong></li>
<li>B. 成本加固定费用合同</li>
<li>C. 总价加激励费用合同</li>
<li>D. 工料合同</li>
</ul>
<p>解析: 供应商不愿承担项目中途的成本增加,就排除了C总价合同,项目团队不希望有质量风险,可以将质量列入激励条款,对供应商加以奖罚,因此只有A可以满足两方面的要求.</p>
</li>
<li>
<p>在矩阵式的组织中,要求一名额外的资源完成任务,项目经理想只能经理申请资源.为获得批准,项目经理应将下列那一项包含进资源请求中(D)</p>
<ul>
<li>A. 需要的技能,资源成本和持续时间</li>
<li>B. 资源姓名, 开始日期和持续时间</li>
<li>C. 活动类型,开始日期和持续时间</li>
<li><strong>D. 需要的技能,开始日期和持续时间</strong></li>
</ul>
<p>解析: 本题只能用排除法,拍那个人是LM的权利,PM相挑人只能私下沟通,排除B. C的活动类型只与挣值相关,即时理解为工作性质也没有技能直接,排除C,AD比较,开始日期比持续日期相对更重要.因此选D.</p>
</li>
<li>
<p>公司完成一个办公楼的迁移项目, 虽然新办公楼优于旧办公楼,但因为新办公楼离许多员工的家比较元,许多员工并不满意.项目经理应该如何解决这种情况(B)</p>
<ul>
<li>A. 创建风险登记册,包括风险概率和影响</li>
<li><strong>B. 通过遵循风险应对计划减轻影响</strong></li>
<li>C. 联系职能经理并更新风险登记册</li>
<li>D. 建议更好的工资</li>
</ul>
<p>解析: 本题理解为风险发生,应执行应对计划,风险登记册不是等风险发生才创建,A排除.项目团队成员的问题,责任人是PM而非LM,C排除.即使PM有权利决定团队成员工资,也应走变更流程,因此必然会改变BAC,D排除.</p>
</li>
<li>
<p>在项目执行期间,客户表示由于多个项目同时进行,因此要对进入测试的实施设置限制,这项变化可能导致进度延期.若要减少负面影响,项目经理下一步应该怎么做(C)</p>
<ul>
<li>A. 通知客户</li>
<li>B. 查看风险登记册中以批准的纠正措施</li>
<li><strong>C. 执行风险分析</strong></li>
<li>D. 按照这项变化更新项目进度计划</li>
</ul>
<p>解析: 本题争议较大,首先排除A,D.A缺乏建设性,通知客户不是风险应对方法,也不能减少影响.D错在未走流程就更新计划.B,C都可选,B采取措施可以减少风险负面影响.C可理解为识别风险后,分析风险以便制定应对计划来减少影响.由于题干描述情景为风险尚未发生,因此C相对更好.</p>
</li>
<li>
<p>在质量检查过程中,发现由于批准的变更为实施,有些可交付成果不完整,项目经理接下来应该怎么做(C)</p>
<ul>
<li>A. 更新项目进度计划</li>
<li>B. 确定一个纠正措施</li>
<li><strong>C. 执行缺陷补救</strong></li>
<li>D. 利用应急储备</li>
</ul>
<p>解析: 质量检查发现可交付成果不完整,应予以修复.C的作用主要就是修复可交付成果的质量问题.</p>
</li>
<li>
<p>在识别可能延迟项目的潜在风险后,项目经理实施了规划的应对措施.项目经理接下来应该怎么做(C)</p>
<ul>
<li>A. 更新项目管理计划</li>
<li>B. 请求批准的应急储备</li>
<li><strong>C. 执行风险审计</strong></li>
<li>D. 制定风险弹回计划</li>
</ul>
<p>解析: 风险应对计划实施后,应进一步跟踪验证应对计划的有效性,这就是风险审计</p>
</li>
<li>
<p>赶工期间需要遵循的两个主要原则是什么(B)</p>
<ul>
<li>A. 对非关键路径上以及赶工成本最少的活动赶工</li>
<li>B. <strong>对关键路径上以及赶工成本最少的活动赶工</strong></li>
<li>C. 在关键路径上找成本最大的活动</li>
<li>D. 在非关键路径上找成本最大的活动</li>
</ul>
<p>解析: 赶工必须赶关键路线上的活动,而同样是关键活动,不同活动的赶工成本会有差异,应选择低成本活动.</p>
</li>
<li>
<p>客户决定更换信息技术服务提供商A,客户与供应商B协商一项协议立即开始服务,项目收尾前,供应商A的项目经理应该怎么做()</p>
<ul>
<li>A. 向法律部门寻求意见</li>
<li><strong>B. 确保向客户转让可交付成本的所有权</strong></li>
<li>C. 确保所有相关文档已更新</li>
<li>D. 与供应商B协商提供分包商服务</li>
</ul>
<p>解析: 本题从供应商A的角度来说,属于合同收尾, B选项是合同收尾的核心工作之一.但很多学员选C, 原则上说C也对,当12.4.3.2中强调将采购档案归入项目档案,是存档而不仅仅是更新,没有B选项充分.</p>
</li>
<li>
<p>项目经理与主题专家一起估算项目任务.主题专家认为某项活动最多可能花45小时完成.在项目团队会议上,相同活动估计需要花70小时,而有些成员认为这项活动能够在32小时内完成,项目经理应该怎么估算这项活动(C)</p>
<ul>
<li>A. 32小时</li>
<li>B. 45小时</li>
<li><strong>C. 47小时</strong></li>
<li>D. 70小时</li>
</ul>
<p>解析: 本题考三点估算,需要提醒的是,目前PMP考试中三点估算题目都用贝塔分布算.</p>
</li>
<li>
<p>公司希望生产与前一个产品类似的产品,但是希望提高产品的利润率,制造工艺可以改善,可以提供历史信息和最新行业趋势()应该使用什么质量工具或技术</p>
<ul>
<li>A. 组建之前的项目团队完成该项目</li>
<li>B. 进行力场分析</li>
<li><strong>C. 与项目团队头脑风暴</strong></li>
<li>D. 是用敏感性分析</li>
</ul>
<p>解析: 题目问质量工具,A,D都不是,先排除,B的作用是促进阻碍质量的因素,与题目问题的相关性小.C可以帮助创建各种问题的解决方案,能对应题干提出的问题.</p>
</li>
<li>
<p>公司A向客户交付了一个项目,但是,在下一个项目中,客户没有将公司A的响应考虑在名单中,公司A确定与客户的关系在上一个项目的执行过程中被破坏了.公司A的项目经理应使用什么工具或技术来确保与客户保持更为良好的关系(C)</p>
<ul>
<li>A. 在每个阶段结束时收集客户的反馈测量客户的满意度</li>
<li>B. 联系客户确定答复不在名单中的原因</li>
<li><strong>C. 创建质量管理计划</strong></li>
<li>D. 制定风险管理计划</li>
</ul>
<p>解析: 本题争议较大,虽然题目中问的是工具和技术,但4个选项都不能称作工具或技术,这个先不管,A公司做完项目后,客户不再让A公司参与投标,肯定是前一个项目客户不满意导致的.需要特别提醒的是,满意是做出来的,不是调查出来的.A只能发现结果,是时候的,C可以确保质量符合要求,达到客户满意,从而与客户建立良好的关系.</p>
</li>
<li>
<p>项目经理记录一个客户的新系统开发项目高层次需求.讨论过程中,项目经理意识到他们每个人都对需求有不同的理解(C)项目经理接下来应该怎么做?</p>
<ul>
<li>A. 等待客户决定他们想要的是什么</li>
<li>B. 编写一份报告,按项目经理的理解解释客户的需求</li>
<li><strong>C. 安排一次与客户的会议,澄清需求</strong></li>
<li>D. 征询项目发起人的意见</li>
</ul>
<p>解析: 收集需求时,客户方人员需求不一致,就应该用引导式研讨会来确认和统一需求,项目中没有引导式研讨会,当C最接近,A不具主动性,D,B都是错误的说法.</p>
</li>
<li>
<p>出于个人原因,项目发起人通知项目经理更换一名表现良好的团队成员,项目经理接下来应该怎么做(A).</p>
<ul>
<li><strong>A 与发起人讨论重新考虑这个请求,因为团队成员表现良好,对项目成功有价值</strong></li>
<li>B. 只有对项目有利,才接受项目发起人的请求</li>
<li>C. 接受项目发起人的请求,并使用合格资源更换团队成员</li>
<li>D. 不理会发起人的请求</li>
</ul>
<p>解析: 本题为职业道德题目,也可以理解为干系人问题,从题干描述看不出该成员能力不行或犯错误,也许知识干系人不喜欢他,要去影响干系人,改变他的认识.</p>
</li>
<li>
<p>准备每周状态报告时,项目经理注意到该周的计划里程碑满足,但是项目的进度绩效指数为0.85,项目经理接下来该怎么做(B)</p>
<ul>
<li>A. 核实所有里程碑</li>
<li><strong>B. 合适是否有任何逾期任务</strong></li>
<li>C. 无须做任何措施,因为本周任务完成了</li>
<li>D. 无须做任何措施,因为不是关键路径上的活动</li>
</ul>
<p>解析: 里程碑符合, 表明关键路径没有问题,当但SPI &lt; 1, 那一定是有非关键路径上的工作延误,因此选B,只与是否要采取行动,都不影响先选B.</p>
</li>
<li>
<p>成本偏差为$-3000美元,挣值分析显示?(B)</p>
<ul>
<li>A. 有利,项目执行效率比较高</li>
<li><strong>B. 不利,项目执行效率比较低</strong></li>
<li>C. 当项目完工时,项目成本将超支3000美元</li>
<li>D. 当项目完工时,项目成本将节约3000美元</li>
</ul>
<p>解析: CV &lt; 0, 表明当前成本超支,只与项目完成的时候是否超支,那倒不一定,什么情况都有可能.</p>
</li>
<li>
<p>一个项目,项目团队发现没有人能够概述整个系统, 项目团队认为一个重要问题的交互可能缺失,为解决这个问题,质量经理应建议下列那一项工具(D)</p>
<ul>
<li>A. 力场分析</li>
<li>B 工作分解结构</li>
<li>C. 帕累托分析</li>
<li><strong>D. 流程图</strong></li>
</ul>
<p>解析: 能显示一个系统运转机制,传导过程,关键点或决策点的是流程图,流程图属于质量工具,当无人能了解或概述整个系统时,绘制流程图可以解决这个问题.</p>
</li>
<li>
<p>项目经理负责的新产品开发项目发生了一项风险,这项风险之前没有制定应对计划,项目经理应该怎么做(A)</p>
<ul>
<li><strong>A. 进行风险评估,并制定权变措施</strong></li>
<li>B. 将新风险通知给管理层</li>
<li>C. 和干系人商谈应对计划</li>
<li>D. 动用一些储备</li>
</ul>
<p>解析: 风险发生,应采取措施,没有事先制定好的应对计划,属于未知的未知风险,应采取权变措施,A最好,不选B,因为具体风险的管理是PM的职责.C错在应对计划,权变措施才读.D语焉不详,为强调应对.</p>
</li>
<li>
<p>项目经理在实施风险应对计划后,还应该关注(B)</p>
<ul>
<li>A. 更新风险管理计划</li>
<li><strong>B. 分析评估残余风险</strong></li>
<li>C. 定量风险分析</li>
<li>D. 定性风险分析</li>
</ul>
<p>解析: 实施风险应对计划之后,除了要跟踪应对计划的有效性(即风险审计)之外,还要确认是否有此生风险和残余风险.B较好,A是程序计划,无须更新,CD都是次生风险之前的工作.</p>
</li>
<li>
<p>项目经理终止了一份包含两部分设计报告的合同,因为第一部分不能满足要求,选择委员会将新合同授予另外一个设计师在合同收尾过程中,项目经理应执行下列哪一项(C)</p>
<ul>
<li><strong>A. 审查采购过程</strong></li>
<li>B. 更新采购管理计划</li>
<li>C. 将终止合同包含进经验教训文档中</li>
<li>D. 准备一份完工证明</li>
</ul>
<p>解析: 合同终止要进行合同收尾,A属于合同收尾中的采购审计,正确.几乎所有的学员本题都选C,被终止的合同属于采购文件,要用记录管理系统进行归档.经验教训是和采购文档并列的输出,二者无包含关系.</p>
</li>
<li>
<p>项目经理目前正在发展一个临时组件的图案度,请问您项目经理应该怎么做(B)</p>
<ul>
<li>A. 跟踪团队绩效</li>
<li><strong>B. 查找改进能力的方式</strong></li>
<li>C. 判读人员的可用性</li>
<li>D. 跟职能经理协商引入合格的人员</li>
</ul>
<p>解析: 题干描述的是: 建设团队,只有B属于建设团队的工作</p>
</li>
<li>
<p>项目进行过程中,项目经理发现相关干系人对产品技能指标,时间和成本不太清楚,请问应该修订什么文件(B)</p>
<ul>
<li>A. 进度管理计划</li>
<li><strong>B. 项目章程</strong></li>
<li>C. 产品范围说明书</li>
<li>D. 成本管理计划</li>
</ul>
<p>解析: 四个选项中,能涵盖产品技术指标,时间,成本信息的,只有项目章程.C可理解为产品范围描述,其不包括时间,成本信息.</p>
</li>
<li>
<p>一个设计项目经历了两个月后,客户要求修改产品,项目经历对此事并不知情,在最终测试阶段,测试结果和计划规定的不符,这是以下那个问题造成的(A)</p>
<ul>
<li><strong>A. 范围控制较差</strong></li>
<li>B. 为遵循沟通管理计划</li>
<li>C. 质量管理计划规划的不到位</li>
<li>D. 对测试计划的定义规定不足</li>
</ul>
<p>解析: 客户要求修改产品,但由于PM并不知晓导致不符合,这属于变更管理问题.修改产品本身也是范围变更,因此A很正确.沟通管理计划只要是指导信息发布,不指导变更.质量管理计划指导如何实现质量指标,不涉及范围变更.</p>
</li>
<li>
<p>完成某个工作的首次成本估算是1亿美元,第二次估算提高了25%, 第三次估算是首次估算的三倍,问完成该工作最有要花费多少钱(C)</p>
<ul>
<li>A. 1.25亿美元</li>
<li>B. 1.5亿美元</li>
<li><strong>C. 3亿美元</strong></li>
<li>D. 5.2亿美元</li>
</ul>
<p>解析: 很多人把本题当做三点估算,三点估算是利用全部数据中的三个特殊值,最悲观,最乐观,最可能来估算.而本题中的三个数值明显与三点估算不同,强调的是第一次,第二次,第三次,非常符合项目中的渐进明细,第三次估算值相对最准,选C.</p>
</li>
<li>
<p>一个进度为10天的项目,已完成了50%的工作,项目成本预算为800元,当前已花费400元,CPI为1.15, 问项目的状态为(A)</p>
<ul>
<li><strong>A. 优于进度,成本优于预期</strong></li>
<li>B. 符合预算和进度</li>
<li>C. 进度落后,成本优于预期</li>
<li>D. 优于进度,成本不符合预期</li>
</ul>
<p>解析: 有学员告诉我本题出错了,这是为尊重原题,是常见的翻译错误,即使这样也不影响我们选出正确的答案.文字会翻译错,但数字不会,信息矛盾时,数字最可靠.花费400元,即AC = 400, 这个没有争议. CPI = 1.15, EV 必然是 460, 这个可以确信.这样题目中说完成50%工作,按中文意思EV = 400,与CPI矛盾,CPI更可靠.因此**完成50%**应该是翻译错误,更可能英文虚拟语气未翻译出来,50%应该说的是PV,那么 PV = 400, A正确.提醒: 考题中挣值题目读不清PV,EV,AC时,看英文原文.</p>
</li>
<li>
<p>一个项目的预算为40W美金, 工期20天. 预算均匀分布到工期中,到第10天时, 成本花费20W,此时SPI = 1.09, 请问目前项目绩效状态(D)</p>
<ul>
<li>A. 成本符合预算,进度提前</li>
<li>B. 成本符合预算,进度落后</li>
<li>C. 成本超出,进度落后</li>
<li><strong>D. 成本未超出预算,进度提前</strong></li>
</ul>
<p>解析: 本题 PV = 20, AC = 20, EV = 21.8 只有D正确.</p>
</li>
<li>
<p>项目经理在准备项目章程期间发现有一个当前团队难以实现的技术, 项目经理招聘了一位有方面技能的人员,这属于下列哪一个风险处理策略(A).</p>
<ul>
<li><strong>A.回避</strong></li>
<li>B. 减轻</li>
<li>C. 提高</li>
<li>D. 转移</li>
</ul>
<p>解析: 招聘有该方面的技术的人员,可以理解为: 获得专有技能,属于回避的例子.</p>
</li>
<li>
<p>项目和分包商签订了固定总价加经济费用的调整合同,现在原材料价格直线上涨,问接下来该怎么办(B)</p>
<ul>
<li>A. 分包商履行其责任和义务</li>
<li><strong>B. 和分包商协商修改合同类型</strong></li>
<li>C. 取消合同</li>
<li>D. 项目团队履行其责任和义务</li>
</ul>
<p>解析: 本题4个选项都不很好, PMBOK 363页第三段第三行,运行根据条件变化(如通货膨胀,某些特殊商品的成本增降),以事先确定的方式对合同价格进行最终调整.根据这个说法,应该是双方按约定调整价格,选项B,D都不完全符合,无奈之下,只好选B.</p>
</li>
<li>
<p>以下那项能显示问题的优先级,并集中解决最艰难的问题(D)</p>
<ul>
<li>A. 流程图</li>
<li>B. 鱼骨图</li>
<li>C. 控制图</li>
<li><strong>D. 帕累托图</strong></li>
</ul>
<p>解析: 都选对了,不解释</p>
</li>
<li>
<p>在项目章程制订时,项目经理发现项目合同还未签订,问项目经理接下来该怎么办(A)</p>
<ul>
<li><strong>A. 项目经理主动找项目发起人协商项目合同签订问题</strong></li>
<li>B. 停止项目</li>
<li>C. 项目经理继续项目,合同签订不影响项目章程的制订</li>
<li>D. 项目经理向公司管理层汇报</li>
</ul>
<p>解析: 合同是章程的输入, 本题可以判断是从客户处获得的一个项目, 合同签订是项目正式批准的前提,因此选A</p>
</li>
<li>
<p>某个预算为10天的项目目前完成了50%, 在一次评审会上,团队成员提出需要加班3天才能完成,问挣值是多少(A)</p>
<ul>
<li><strong>A. 5天</strong></li>
<li>B. 6.5天</li>
<li>C. 7天</li>
<li>D. 10天</li>
</ul>
<p>解析: 本题是挣值题目,但没想到还有这么多人做错,BAC = 10, 完成50%, EV = 10天 * 50% = 5天,还是那个问题,什么是挣值? 已完成工作的预算价值叫挣值,这题做错的,把这个定义在读10遍,必须滴!</p>
</li>
<li>
<p>一个职能经理参加了一个实施新会计系统的启动大会,并安排组织内的资源在一个项目任务,职能经理又将这些资源分配给公司另一个项目.项目经理视图联系职能经理,但是没有得到任何回应,项目经理应该首先使用下列那一项管理技能(A)</p>
<ul>
<li><strong>A. 解决冲突</strong></li>
<li>B. 促进对项目目标达成一致同意</li>
<li>C. 影响人员支持项目</li>
<li>D. 克服阻力改变</li>
</ul>
<p>解析: 职能经理一女两嫁,产生资源冲突,题目问PM应首先使用什么,意思是面对该情况,下一步的措施,A较好,如果题目问PM本应采取什么措施来预防,则C更好.</p>
</li>
<li>
<p>一个由公司内部团队以及供应商共同开发的项目正经历问题,因此,公司总裁雇佣了一名新项目经历,在第一次项目评审期间,新项目经历发现在第一阶段,未规定关键项目可交付成果且未确定项目阶段(D)</p>
<ul>
<li>A. 修改项目管理计划并尽快实施</li>
<li>B. 集中于按照项目管理计划完成第一阶段的交付</li>
<li>C. 与发起人和关键个干系人一起确认项目范围</li>
<li><strong>D. 更新项目章程并获得关键干系人的支持</strong></li>
</ul>
<p>解析: 新任项目经理,批准和发布章程的重要性超过其他一切工作</p>
</li>
<li>
<p>在项目收尾时,项目经理与客户一起审查可交付成果. 客户表示出对一个可交付成果的关注,并且双方都认为其未满足书面记录的需求指标,项目经理下一步应该怎么做(C)</p>
<ul>
<li>A. 作为一个缺陷接受这个问题</li>
<li>B. 评估该变更并更新</li>
<li><strong>C. 使用需求跟踪矩阵</strong></li>
<li>D. 建立风险登记册</li>
</ul>
<p>解析: 本题问题较大,答案应该说并不明确,A可能性小,对缺陷采取放任态度肯定不正确.B选项不完成,缺陷修复是变更,但评估与更新含义都很模糊,语焉不详.C如果可以理解为在需求跟踪矩阵中记录该情况,倒是一个很不错的选择,因为这个需求没有实现.D不好,缺陷是可以想办法修复的,归于风险有逃避责任之嫌,现在,这题我认为C更好,能解释.</p>
</li>
<li>
<p>项目将在两周内结束,但是由于未定义的需求,还有一个任务未完成,在移交给运营团队之前,项目经理应怎么做(C)</p>
<ul>
<li>A. 收集项目信息,以便将来使用</li>
<li>B. 与团队开展经验教训审查</li>
<li><strong>C. 确认可交付成果, 获得客户的验收</strong></li>
<li>D. 召集干系人获得对未完成任务的同意</li>
</ul>
<p>解析: A,B项都是移交运营团队前必须做的工作,可以在之后做,C确认范围是移交前必须做的,D与问题没有关联系.</p>
</li>
<li>
<p>一个项目团队成员更新了项目目标的状态,并发现落后于进度,项目经理应该使用什么来估算状态更新对原始基准的影响(A)</p>
<ul>
<li><strong>A. 工作绩效信息</strong></li>
<li>B. 资源平衡</li>
<li>C. PERT</li>
<li>D. 假设情景分析</li>
</ul>
<p>解析: 本题问题只能理解为现实和计划偏差怎么分析? A是偏差分析的依据.</p>
</li>
<li>
<p>在项目实施期间,一名干系人指出某些可交付成果不符合规范要求,项目经理表示这些规范要求已在项目会议上讨论过,并且已经沟通了约定成果,记录在发布的报告中,为避免这种结果,在规划阶段应该完成那一项工作(B)</p>
<ul>
<li>A. 在干系人管理计划中分析沟通需求</li>
<li><strong>B. 将干系人包含在质量管理计划准备过程中</strong></li>
<li>C. 没有必要采取任何行动,干系人自己查看</li>
<li>D. 在项目启动大会上公布可交付成果.</li>
</ul>
<p>解析: 本题问题也很大,客户不认可可交付成果质量规范,是项目经理在规划过程中那一项工作没做好?目前看,D不很好,开工会议是执行过程,不是规划过程.B选项更好,让干系人在规划质量过程中参与,能防止在验收时的异议.注意: 质量管理计划的准备过程,即规划质量过程,该过程产生质量测量指标,即技术规范.本题建议选B.</p>
</li>
<li>
<p>在项目执行期间,由于担心成本超支,项目经理与一个关键供应商签署执行了固定总价合同,这属于下列哪一项实例(A)</p>
<ul>
<li><strong>A. 使用采购管理计划</strong></li>
<li>B. 使用卖方选择过程</li>
<li>C. 使用合格卖方清单</li>
<li>D. 使用固定总价合同技术</li>
</ul>
<p>解析: 采购计划中包括根据风险情况推荐的合同类型,D不是在回答问题</p>
</li>
<li>
<p>正在准备一个项目时, 一个项目经理考虑如何处理将可能在项目执行期间发生的大量变更,项目经理应该执行下面那一项(C)</p>
<ul>
<li>A. 第一时间和发起人讨论所有变更,只要他们被提出</li>
<li>B. 在项目管理计划中说明,大量变更不能被容忍</li>
<li><strong>C. 事先建立一个整体变更控制流程</strong></li>
<li>D. 建立风险登记册</li>
</ul>
<p>解析: 面对大量变更, 必须有程序支持,处理变更.</p>
</li>
<li>
<p>由于质量问题,变更控制委员会批准了一项变更. 项目建立必须实施变更以便让项目与项目管理计划保持一致.项目经理首先应该实施那一项工作(B)</p>
<ul>
<li>A. 质量控制</li>
<li><strong>B. 缺陷补救</strong></li>
<li>C. 纠正措施</li>
<li>D. 预防措施</li>
</ul>
<p>解析: 本题稍有争议,A答案似乎也符合,但<strong>质量问题</strong>,用缺陷修复更直接.</p>
</li>
<li>
<p>一个被分配到新项目的项目经理与发起人,高级管理层以及经验丰富的项目经理开会讨论可能的项目干系人.项目经理与已识别到的干系人会面,并记录他们在公司中的权利级别以及对项目产出的关注级别,项目经理接下来应该做什么()</p>
<ul>
<li>A. 更新项目章程</li>
<li>B. 进行干系人分析</li>
<li><strong>C. 建立一个权利-利益方格</strong></li>
<li>D. 规划一个启动大会(Kick-off meeting)</li>
</ul>
<p>解析: 本题在AC之间争议很大,若不考虑题干描述的工作情景,新任PM,应该是A,但章程多强调批准,发布,起草,更新章程的情况在题目中较罕见,若针对描述的问题,则C相对较好,本题答案为推荐答案,不确定.</p>
</li>
<li>
<p>一个全球性项目拥有分布多个地点的项目团队,对整个项目管理计划没有可见性,包括里程碑和项目期望.在项目期间,项目经理意识到这是个错误,且所有信息应该与所有项目团队分享,无论所在位置在那,项目经理应在何时与项目团队分享信息(A)</p>
<ul>
<li><strong>A. 在项目团队发展期间</strong></li>
<li>B. 在项目启动阶段</li>
<li>C. 在每次状态审查会上</li>
<li>D. 在项目启动大会上</li>
</ul>
<p>解析: 与团队分析信息应该是随时或全生命期,只有A符合全生命期.</p>
</li>
<li>
<p>项目发起人要求项目经理快速实施主要可交付成果.项目经理尝试将资源分配给第一个任务,但意识到资源不可用,为识别所需技能,项目经理应该首先参考下列那一份文件(C)</p>
<ul>
<li>A. 资源日历</li>
<li>B. 项目范围说明书</li>
<li><strong>C. 人力资源管理计划</strong></li>
<li>D. WBS词典</li>
</ul>
<p>解析: 问所需技能,C中的角色与职责显示项目需要的资源角色,职责,和能力要求.A中也包括技能,但显示具体资源的技能,是客观存在,与题目中的<strong>所需</strong>不符,故选C.</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>注意找题干,看清楚问什么</li>
<li>ROI = 年利润 / 投资额</li>
<li>风险 = 概率 * 进度影响度</li>
<li>SIPOC Supplier-供应者,Input-输入,Process-流程,Output-输出,Customer-客户</li>
<li>属性抽样(结果为合格不合适)</li>
<li>变量抽样(在连续的量表上标明结果所处的位置,表明合格的程度)</li>
<li>识别干系人归属于启动过程组</li>
<li>提前量为负,滞后量为正</li>
<li>预测型生命周期(计划驱动),适应型生命周期(变更驱动)</li>
<li>在FPIF(总价加激励费用合同),合同总价 = 实际成本 + 目标利润 + (目标成本 - 实际成本) * 卖方分享比例.</li>
<li>项目经理的重要职责之一就是管理干系人的期望</li>
<li>项目经理的另一项职责就是平衡干系人的不同利益</li>
<li>项目治理是一种符合组织治理模式的项目监管职能,覆盖整个项目生命周期</li>
<li>项目治理由项目组合,项目集或发起组织来定义,并要与之相适应,但要与组织治理分开</li>
</ul>]]>
    
    </summary>
    
      <category term="pmp" scheme="http://molloc.com/tags/pmp/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nginx 配置文件总结]]></title>
    <link href="http://molloc.com/2015/05/25/Nginx-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%80%BB%E7%BB%93/"/>
    <id>http://molloc.com/2015/05/25/Nginx-配置文件总结/</id>
    <published>2015-05-25T04:28:09.000Z</published>
    <updated>2015-06-07T06:47:50.533Z</updated>
    <content type="html"><![CDATA[<h2 id="顶级配置"><a class="header-anchor" href="#顶级配置"></a>顶级配置</h2>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义 Nginx 运行的用户和用户组</span></span><br><span class="line"><span class="title">user</span> nginx;</span><br><span class="line"></span><br><span class="line"><span class="comment">#进程文件</span></span><br><span class="line"><span class="title">pid</span> /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#错误日志位置和级别，debug、info、notice、warn、error、crit</span></span><br><span class="line"><span class="title">error_log</span>  /var/log/nginx/error.log <span class="built_in">warn</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Nginx worker 的进程数，一般可设置为可用的CPU内核数。</span></span><br><span class="line"><span class="title">worker_processes</span> <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个 worker 打开文件描述符的最大数量限制。</span></span><br><span class="line"><span class="comment">#理论值应该是最多打开文件数（系统的值ulimit -n）与 nginx 进程数相除，</span></span><br><span class="line"><span class="comment">#但是 nginx 分配请求并不均匀，所以建议与ulimit -n的值保持一致。</span></span><br><span class="line"><span class="title">worker_rlimit_nofile</span> <span class="number">65535</span>;</span><br></pre></td></tr></table></figure>
<p>修改系统文件打开数量限制：</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="built_in">ulimit</span> -HSn <span class="number">65535</span> //临时修改</span><br></pre></td></tr></table></figure>
<p>重启后永久生效，则需要设置修改：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/security/limits.conf</span><br></pre></td></tr></table></figure>
<p>在文件尾部添加：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile <span class="number">200000</span></span><br><span class="line">* hard nofile <span class="number">200000</span></span><br></pre></td></tr></table></figure>
<h2 id="events-模块"><a class="header-anchor" href="#events-模块"></a>Events 模块</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    <span class="comment">#设置一个worker进程同时打开的最大连接数</span></span><br><span class="line">    worker_connections <span class="number">2048</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#告诉nginx收到一个新连接通知后接受尽可能多的连接</span></span><br><span class="line">    multi_accept on;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置用于复用客户端线程的轮询方法。如果你使用Linux 2.6+，你应该使用epoll。</span></span><br><span class="line">    <span class="comment">#如果你使用*BSD，你应该使用kqueue。</span></span><br><span class="line">    use epoll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="http-模块"><a class="header-anchor" href="#http-模块"></a>HTTP 模块</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    <span class="comment">#隐藏 Nginx 的版本号，提高安全性。</span></span><br><span class="line">    server_tokens off;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#开启高效文件传输模式，sendfile 指令指定 Nginx 是否调用sendfile 函数来输出文件，</span></span><br><span class="line">    <span class="comment">#对于普通应用设为 on，如果用来进行下载等应用磁盘 IO 重负载应用，可设置为 off，</span></span><br><span class="line">    <span class="comment">#以平衡磁盘与网络 I/O 处理速度，降低系统的负载。</span></span><br><span class="line">    sendfile on;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#是否开启目录列表访问，默认关闭。</span></span><br><span class="line">    autoindex off;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#告诉 Nginx 在一个数据包里发送所有头文件，而不一个接一个的发送</span></span><br><span class="line">    tcp_nopush on;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#告诉 Nginx 不要缓存数据，而是一段一段的发送--当需要及时发送数据时，</span></span><br><span class="line">    <span class="comment">#就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。</span></span><br><span class="line">    <span class="comment">#Nginx 默认会始终工作在 tcp nopush 状态下。但是当开启前面的 sendfile on; 时，</span></span><br><span class="line">    <span class="comment">#它的工作特点是 nopush 的最后一个包会自动转转换到 nopush off。为了减小那200ms的延迟，</span></span><br><span class="line">    <span class="comment">#开启 nodelay on; 将其很快传送出去。结论就是 sendfile on; 开启时，tcp_nopush 和 tcp_nodelay 都是on 是可以的。</span></span><br><span class="line">    tcp_nodelay on;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#日志格式设定</span></span><br><span class="line">    <span class="built_in">log</span>_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line">    <span class="comment">#定义访问日志，设置为 off 可以关闭日志，提高性能</span></span><br><span class="line">    access_<span class="built_in">log</span> /var/<span class="built_in">log</span>/nginx/access.log main;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#连接超时时间，单位是秒</span></span><br><span class="line">    keepalive_timeout <span class="number">120</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#读取HTTP头部的超时时间，默认值 60。</span></span><br><span class="line">    <span class="comment">#客户端与服务器建立连接后将开始接收HTTP头部，在这个过程中，</span></span><br><span class="line">    <span class="comment">#如果在一个时间间隔（超时时间）内没有读取到客户端发来的字节，</span></span><br><span class="line">    <span class="comment">#则认为超时，并向客户端返回408 ("Request timed out")响应。</span></span><br><span class="line">    client_header_timeout <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#默认值 60。与client_header_timeout相似，只是这个超时时间只在读取HTTP包体时才有效。</span></span><br><span class="line">    client_body_timeout <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送响应的超时时间，默认值 60。即Nginx服务器向客户端发送了数据包，</span></span><br><span class="line">    <span class="comment">#但客户端一直没有去接收这个数据包。如果某个连接超过send_timeout定义的超时时间，那么Nginx将会关闭这个连接。</span></span><br><span class="line">    send_timeout <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#连接超时后将通过向客户端发送RST包来直接重置连接。这个选项打开后，</span></span><br><span class="line">    <span class="comment">#Nginx会在某个连接超时后，不是使用正常情形下的四次握手关闭TCP连接，</span></span><br><span class="line">    <span class="comment">#而是直接向用户发送RST重置包，不再等待用户的应答，</span></span><br><span class="line">    <span class="comment">#直接释放Nginx服务器上关于这个套接字使用的所有缓存（如TCP滑动窗口）。</span></span><br><span class="line">    <span class="comment">#相比正常的关闭方式，它使得服务器避免产生许多处于FIN_WAIT_1、FIN_WAIT_2、TIME_WAIT状态的TCP连接。</span></span><br><span class="line">    <span class="comment">#注意，使用RST重置包关闭连接会带来一些问题，默认情况下不会开启。</span></span><br><span class="line">    reset_timedout_connection off;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#要限制连接，必须先有一个容器对连接进行计数，"zone=" 是给它一个名字，</span></span><br><span class="line">    <span class="comment">#可以随便叫，这个名字要跟下面的 limit_conn 一致。$binary_remote_addr </span></span><br><span class="line">    <span class="comment">#用二进制来储存客户端的地址，1m 可以储存 32000 个并发会话。</span></span><br><span class="line">    <span class="built_in">limit</span>_conn_zone <span class="variable">$binary_remote_addr</span> zone=addr:<span class="number">5</span>m;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#给定的key设置最大连接数。这里key是addr，我们设置的值是100，</span></span><br><span class="line">    <span class="comment">#也就是说我们允许每一个IP地址最多同时打开有100个连接。</span></span><br><span class="line">    <span class="built_in">limit</span>_conn addr <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#对每个连接限速100k。这如果一个IP允许两个并发连接，那么这个IP就是限速200K。</span></span><br><span class="line">    <span class="built_in">limit</span>_rate <span class="number">100</span>k; </span><br><span class="line"></span><br><span class="line">    <span class="comment">#include 是一个在当前文件中包含另一个文件内容的指令。</span></span><br><span class="line">    <span class="comment">#这里我们使用它来加载文件扩展名与文件类型映射表。nginx根据映射关系，</span></span><br><span class="line">    <span class="comment">#设置http请求响应头的Content-Type值。当在映射表找不到时，</span></span><br><span class="line">    <span class="comment">#使用nginx.conf中default-type指定的默认值。</span></span><br><span class="line">    include /etc/nginx/mime.types;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置文件使用的默认的MIME-type</span></span><br><span class="line">    default_<span class="built_in">type</span> text/html;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#默认编码</span></span><br><span class="line">    charset UTF-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#该模块可以读取预先压缩的gz文件，这样可以减少每次请求进行gzip压缩的CPU资源消耗。</span></span><br><span class="line">    <span class="comment">#该模块启用后，nginx首先检查是否存在请求静态文件的gz结尾的文件，如果有则直接返回该gz文件内容。</span></span><br><span class="line">    gzip_static off;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">#开启 gzip 压缩。</span></span><br><span class="line">    gzip on;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 禁用客户端为 IE6 时的 gzip功能。</span></span><br><span class="line">    gzip_<span class="built_in">disable</span> <span class="string">"msie6"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#Nginx做为反向代理的时候启用。</span></span><br><span class="line">    <span class="comment">#可选值：off|expired|no-cache|no-sotre|private|no_last_modified|no_etag|auth|any</span></span><br><span class="line">    gzip_proxied any;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置允许压缩的页面最小字节数，页面字节数从header头中的Content-Length中进行获取。</span></span><br><span class="line">    <span class="comment">#建议设置成大于1k的字节数，小于1k可能会越压越大。</span></span><br><span class="line">    gzip_min_length <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的。</span></span><br><span class="line">    gzip_comp_level <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。 </span></span><br><span class="line">    <span class="comment">#例如 4 4k 代表以4k为单位，按照原始数据大小以4k为单位的4倍申请内存。</span></span><br><span class="line">    <span class="comment">#如果没有设置，默认值是申请跟原始数据相同大小的内存空间去存储gzip压缩结果。</span></span><br><span class="line">    gzip_buffers <span class="number">4</span> <span class="number">16</span>k;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置需要压缩的数据格式。Nginx默认只对text/html进行压缩。</span></span><br><span class="line">    gzip_types text/plain text/css application/json application/x-javascript \</span><br><span class="line">               text/xml application/xml application/xml+rss text/javascript;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#为打开文件指定缓存，默认是没有启用的，max 指定缓存数量，</span></span><br><span class="line">    <span class="comment">#建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。</span></span><br><span class="line">    open_file_cache max=<span class="number">65535</span> inactive=<span class="number">30</span>s;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#多长时间检查一次缓存的有效信息</span></span><br><span class="line">    open_file_cache_valid <span class="number">30</span>s;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#open_file_cache指令中的inactive参数时间内文件的最少使用次数，</span></span><br><span class="line">    <span class="comment">#如果超过这个数字，文件描述符一直是在缓存中打开的。</span></span><br><span class="line">    <span class="comment">#出现 Last-Modified 不变的情况，就是因为当nginx对一个静态文件缓存后，</span></span><br><span class="line">    <span class="comment">#如果30s内还在访问它，那么它的缓存就一直存在，直到30s内你不访问了为止。</span></span><br><span class="line">    open_file_cache_min_uses <span class="number">2</span>;</span><br><span class="line">    <span class="comment">#是否记录cache错误</span></span><br><span class="line">    open_file_cache_errors on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    include /etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="server-模块"><a class="header-anchor" href="#server-模块"></a>SERVER 模块</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#监听端口，nginx 会根据请求的 HOST 来决定使用哪个 SERVER 段的配置。</span></span><br><span class="line">    <span class="comment">#如果没有匹配的 server_name，则默认使用配置文件中第一个。</span></span><br><span class="line">    <span class="comment">#加上 default_server 则可以以指定没有匹配时的默认规则。</span></span><br><span class="line">    <span class="comment">#listen 80;</span></span><br><span class="line">    listen <span class="number">80</span> default_server;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#域名可以有多个，用空格隔开</span></span><br><span class="line">    server_name www.test.com test.com;</span><br><span class="line">    root /user/share/nginx/html/<span class="built_in">test</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#404页面配置</span></span><br><span class="line">    error_page   <span class="number">404</span>   /<span class="number">404</span>.html;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置 ssl，有需要时开启。</span></span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate /etc/nginx/ssl/server.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/ssl/server.key;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        index   index.html index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#图片缓存时间设置</span></span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">        expires <span class="number">10</span>d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#JS和CSS缓存时间设置</span></span><br><span class="line">    location ~ .*.(js|css)?$ &#123;</span><br><span class="line">        expires <span class="number">1</span>h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ [^/]\.php(/|$) &#123;</span><br><span class="line">        fastcgi_index   index.php;</span><br><span class="line">        <span class="comment">#开启 PATH_INFO 支持，作用就是把参数按照给定的正则表达式分割成 $fastcgi_script_name 和 $fastcgi_path_info。</span></span><br><span class="line">        <span class="comment">#例如：请求 index.php/id/1 不加此行配置时，fastcgi_script_name 是 /index.php/id/1，fastcgi_path_info 是空。</span></span><br><span class="line">        <span class="comment">#加上之后，fastcgi_script_name 是 index.php，fastcgi_path_info 是 /id/1</span></span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(.*)$;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#此值即是 PHP 中 $_SERVER['SCRIPT_FILENAME'] 的值</span></span><br><span class="line">        fastcgi_param   SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        fastcgi_param   PATH_INFO               <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">        fastcgi_param   PATH_TRANSLATED <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#指定FastCGI服务器监听端口与地址。须和 PHP-FPM 的设置相同。</span></span><br><span class="line">        <span class="comment">#fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        fastcgi_pass    unix:/var/run/php5-fpm.sock;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a class="header-anchor" href="#参考资料"></a>参考资料</h2>
<ol>
<li><a href="http://nginx.org/en/docs/" target="_blank" rel="external">nginx document</a></li>
<li><a href="http://www.oschina.net/translate/nginx-setup" target="_blank" rel="external">nginx setup</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="顶级配置"><a class="header-anchor" href="#顶级配置"></a>顶级配置</h2>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义 Nginx 运行的用户和用户组</span></span><br><span class="line"><span class="title">user</span> nginx;</span><br><span class="line"></span><br><span class="line"><span class="comment">#进程文件</span></span><br><span class="line"><span class="title">pid</span> /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#错误日志位置和级别，debug、info、notice、warn、error、crit</span></span><br><span class="line"><span class="title">error_log</span>  /var/log/nginx/error.log <span class="built_in">warn</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Nginx worker 的进程数，一般可设置为可用的CPU内核数。</span></span><br><span class="line"><span class="title">worker_processes</span> <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个 worker 打开文件描述符的最大数量限制。</span></span><br><span class="line"><span class="comment">#理论值应该是最多打开文件数（系统的值ulimit -n）与 nginx 进程数相除，</span></span><br><span class="line"><span class="comment">#但是 nginx 分配请求并不均匀，所以建议与ulimit -n的值保持一致。</span></span><br><span class="line"><span class="title">worker_rlimit_nofile</span> <span class="number">65535</span>;</span><br></pre></td></tr></table></figure>
<p>修改系统文件打开数量限制：</p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://molloc.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://molloc.com/tags/nginx/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git push与pull的默认行为]]></title>
    <link href="http://molloc.com/2015/05/22/Git-push%E4%B8%8Epull%E7%9A%84%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA/"/>
    <id>http://molloc.com/2015/05/22/Git-push与pull的默认行为/</id>
    <published>2015-05-22T04:20:18.000Z</published>
    <updated>2015-06-07T07:22:08.322Z</updated>
    <content type="html"><![CDATA[<h2 id="git-push"><a class="header-anchor" href="#git-push"></a>git push</h2>
<p>通常对于一个本地的新建分支，例如<code>git checkout -b develop</code>, 在<code>develop</code>分支<code>commit</code>了代码之后，如果直接执行<code>git push</code>命令，<code>develop</code>分支将不会被<code>push</code>到远程仓库（但此时<code>git push</code>操作有可能会推送一些代码到远程仓库，这取决于我们本地<code>git config</code>配置中的<code>push.default</code>默认行为，下文将会逐一详解）。</p>
<p>因此我们至少需要显式指定将要推送的分支名，例如<code>git push origin develop</code>，才能将本地新分支推送到远程仓库。</p>
<p>当我们通过显式指定分支名进行初次<code>push</code>操作后，本地有了新的<code>commit</code>，此时执行<code>git push</code>命令会有什么效果呢？</p>
<a id="more"></a>
<p>如果你未曾改动过<code>git config</code>中的<code>push.default</code>属性，根据我们使用的git不同版本（Git 2.0之前或之后），<br>
<code>git push</code>通常会有两种截然不同的行为:</p>
<ol>
<li>develop分支中本地新增的commit被push到远程仓库</li>
<li>push失败，并收到git如下的警告</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: The current branch new has no upstream branch.</span><br><span class="line">To push the current branch and <span class="built_in">set</span> the remote as upstream, use</span><br><span class="line">    git push --set-upstream origin develop</span><br></pre></td></tr></table></figure>
<p>为什么git版本不同会有两种不同的push行为？</p>
<p>因为在git的全局配置中，有一个push.default属性，其决定了git push操作的默认行为。在Git 2.0之前，这个属性的默认被设为’matching’，2.0之后则被更改为了’simple’。</p>
<p>我们可以通过<code>git version</code>确定当前的git版本（如果小于2.0，更新是个更好的选择），通过<code>git config --global push.default</code> 'option'改变push.default的默认行为（或者也可直接编辑~/.gitconfig文件）。</p>
<h3 id="push-default-有以下几个可选值："><a class="header-anchor" href="#push-default-有以下几个可选值："></a>push.default 有以下几个可选值：###</h3>
<p>nothing, current, upstream, simple, matching</p>
<p>其用途分别为：</p>
<ul>
<li><code>nothing</code>  push操作无效，除非显式指定远程分支，例如git push origin develop（我觉得。。。可以给那些不愿学git的同事配上此项）。</li>
<li><code>current</code>  push当前分支到远程同名分支，如果远程同名分支不存在则自动创建同名分支。</li>
<li><code>upstream</code> push当前分支到它的upstream分支上（这一项其实用于经常从本地分支push/pull到同一远程仓库的情景，这种模式叫做central workflow）。</li>
<li><code>simple</code>   simple和upstream是相似的，只有一点不同，simple必须保证本地分支和它的远程upstream分支同名，否则会拒绝push操作。</li>
<li><code>matching</code> push所有本地和远程两端都存在的同名分支.</li>
</ul>
<p>因此如果我们使用了git2.0之前的版本，<code>push.default = matching</code>，<code>git push</code>后则会推送当前分支代码到远程分支，而2.0之后，<code>push.default = simple</code>，如果没有指定当前分支的upstream分支，就会收到上文的fatal提示。</p>
<h2 id="upstream-downstream"><a class="header-anchor" href="#upstream-downstream"></a>upstream &amp; downstream</h2>
<p>说到这里，需要解释一下git中的upstream到底是什么：</p>
<blockquote>
<p>git中存在upstream和downstream，简言之，当我们把仓库A中某分支x的代码push到仓库B分支y，此时仓库B的这个分支y就叫做A中x分支的upstream，而x则被称作y的downstream，这是一个相对关系，每一个本地分支都相对地可以有一个远程的upstream分支（注意这个upstream分支可以不同名，但通常我们都会使用同名分支作为upstream）。</p>
</blockquote>
<p>初次提交本地分支，例如git push origin develop操作，并不会定义当前本地分支的upstream分支，我们可以通过git push --set-upstream origin develop，关联本地develop分支的upstream分支，另一个更为简洁的方式是初次push时，加入-u参数，例如git push -u origin develop，这个操作在push的同时会指定当前分支的upstream。</p>
<p>注意<code>push.default = current</code>可以在远程同名分支不存在的情况下自动创建同名分支，有些时候这也是个极其方便的模式，比如初次push你可以直接输入 <code>git push</code> 而不必显示指定远程分支。</p>
<h2 id="git-pull"><a class="header-anchor" href="#git-pull"></a>git pull</h2>
<p>弄清楚<code>git push</code>的默认行为后，再来看看<code>git pull</code>。</p>
<p>当我们未指定当前分支的upstream时，通常<code>git pull</code>操作会得到如下的提示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">There is no tracking information <span class="keyword">for</span> the current branch.</span><br><span class="line">Please specify <span class="built_in">which</span> branch you want to merge with.</span><br><span class="line">See git-pull(<span class="number">1</span>) <span class="keyword">for</span> details</span><br><span class="line">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line">If you wish to <span class="built_in">set</span> tracking information <span class="keyword">for</span> this branch you can <span class="keyword">do</span> so with:</span><br><span class="line">    git branch --set-upstream-to=origin/&lt;branch&gt; new1</span><br></pre></td></tr></table></figure>
<p><code>git pull</code>的默认行为和git push完全不同。当我们执行git pull的时候，实际上是做了<code>git fetch + git merge</code>操作，fetch操作将会更新本地仓库的remote tracking，也就是refs/remotes中的代码，并不会对refs/heads中本地当前的代码造成影响。</p>
<p>当我们进行pull的第二个行为merge时，对git来说，如果我们没有设定当前分支的upstream，它并不知道我们要合并哪个分支到当前分支，所以我们需要通过下面的代码指定当前分支的upstream：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br><span class="line">// 或者git push --set-upstream origin develop</span><br></pre></td></tr></table></figure>
<p>实际上，如果我们没有指定upstream，git在merge时会访问git config中当前分支(develop)merge的默认配置，我们可以通过配置下面的内容指定某个分支的默认merge操作</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[branch <span class="string">"develop"</span>]</span><br><span class="line">    remote = origin</span><br><span class="line">    merge = refs/heads/develop //[<span class="number">1</span>] 为什么不是refs/remotes/develop?</span><br><span class="line"></span><br><span class="line">或者通过<span class="built_in">command</span>-line直接设置：</span><br><span class="line"></span><br><span class="line">git config branch.develop.merge refs/heads/develop</span><br></pre></td></tr></table></figure>
<p>这样当我们在develop分支git pull时，如果没有指定upstream分支，git将根据我们的config文件去merge origin/develop；如果指定了upstream分支，则会忽略config中的merge默认配置。</p>
<p>以上就是git push和git pull操作的全部默认行为，如有错误，欢迎斧正</p>
<p>[1]: 为什么merge = refs/heads/develop 而不是refs/remotes/develop?</p>
<p>因为这里merge指代的是我们想要merge的远程分支，是remote上的refs/heads/develop，文中即是origin上的refs/heads/develop，这和我们在本地直接执行<code>git merge</code>是不同的(本地执行<code>git merge origin/develop</code>则是直接merge refs/remotes/develop)。</p>
<h2 id="refs"><a class="header-anchor" href="#refs"></a>refs:</h2>
<ul>
<li><a href="http://git-scm.com/book/en/v2/Git-Internals-The-Refspec" target="_blank" rel="external">http://git-scm.com/book/en/v2/Git-Internals-The-Refspec</a></li>
<li><a href="http://stackoverflow.com/questions/658885/how-do-you-get-git-to-always-pull-from-a-specific-branch" target="_blank" rel="external">http://stackoverflow.com/questions/658885/how-do-you-get-git-to-always-pull-from-a-specific-branch</a></li>
<li><a href="http://stackoverflow.com/questions/17096311/why-do-i-need-to-explicitly-push-a-new-branch" target="_blank" rel="external">http://stackoverflow.com/questions/17096311/why-do-i-need-to-explicitly-push-a-new-branch</a></li>
<li><a href="http://www.gitguys.com/topics/the-configuration-file-branch-section/" target="_blank" rel="external">http://www.gitguys.com/topics/the-configuration-file-branch-section/</a></li>
</ul>
<p>原文地址: http://segmentfault.com/a/1190000002783245?utm_source=tuicool</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="git-push"><a class="header-anchor" href="#git-push"></a>git push</h2>
<p>通常对于一个本地的新建分支，例如<code>git checkout -b develop</code>, 在<code>develop</code>分支<code>commit</code>了代码之后，如果直接执行<code>git push</code>命令，<code>develop</code>分支将不会被<code>push</code>到远程仓库（但此时<code>git push</code>操作有可能会推送一些代码到远程仓库，这取决于我们本地<code>git config</code>配置中的<code>push.default</code>默认行为，下文将会逐一详解）。</p>
<p>因此我们至少需要显式指定将要推送的分支名，例如<code>git push origin develop</code>，才能将本地新分支推送到远程仓库。</p>
<p>当我们通过显式指定分支名进行初次<code>push</code>操作后，本地有了新的<code>commit</code>，此时执行<code>git push</code>命令会有什么效果呢？</p>]]>
    
    </summary>
    
      <category term="git" scheme="http://molloc.com/tags/git/"/>
    
      <category term="pull" scheme="http://molloc.com/tags/pull/"/>
    
      <category term="push" scheme="http://molloc.com/tags/push/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[高效Linux bash快捷键及alias总结]]></title>
    <link href="http://molloc.com/2015/05/15/%E9%AB%98%E6%95%88Linux-bash%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8Aalias%E6%80%BB%E7%BB%93/"/>
    <id>http://molloc.com/2015/05/15/高效Linux-bash快捷键及alias总结/</id>
    <published>2015-05-15T14:33:57.000Z</published>
    <updated>2015-06-07T06:48:16.212Z</updated>
    <content type="html"><![CDATA[<p>习惯使用编辑的快捷键可以大大提高效率，记忆学习过程要有意识的忽略功能键、方向键和数字小键盘。以下快捷键适用在bash处于默认的Emacs模式下。如果你有 set -o vi ，就处于  vi 模式就不适用了。另外下面的内容并不包含所有快捷键，只是我个人适用频率最高的几种，但相信已经可以大大提高工作效率了：</p>
<h2 id="bash-shortcut"><a class="header-anchor" href="#bash-shortcut"></a>bash shortcut</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + l   <span class="comment"># 清除屏幕，同clear</span></span><br><span class="line">Ctrl + a   <span class="comment"># 将光标定位到命令的开头</span></span><br><span class="line">Ctrl + e   <span class="comment"># 与上一个快捷键相反，将光标定位到命令的结尾</span></span><br><span class="line">Ctrl + u   <span class="comment"># 剪切光标之前的内容，在输错命令或密码</span></span><br><span class="line">Ctrl + k   <span class="comment"># 与上一个快捷键相反，剪切光标之后的内容</span></span><br><span class="line">Ctrl + y   <span class="comment"># 粘贴以上两个快捷键所剪切的内容。Alt+y粘贴更早的内容</span></span><br><span class="line">Ctrl + w   <span class="comment"># 删除光标左边的参数（选项）或内容（实际是以空格为单位向前剪切一个word）</span></span><br><span class="line">Ctrl + /   <span class="comment"># 撤销，同Ctrl+x u</span></span><br><span class="line">Ctrl + f   <span class="comment"># 按字符前移（右向），同→</span></span><br><span class="line">Ctrl + b   <span class="comment"># 按字符后移（左向），同←</span></span><br><span class="line">Alt  + f   <span class="comment"># 单词前移，标点等特殊字符与空格一样分隔单词（右向），同Ctrl+→</span></span><br><span class="line">Alt  + b   <span class="comment"># 单词后移（左向），同Ctrl+←</span></span><br><span class="line">Alt  + d   <span class="comment"># 光标处删除至字尾。可以Ctrl+y粘贴回来</span></span><br><span class="line">Alt  + \   <span class="comment"># 除当前光标前面所有的空白字符</span></span><br><span class="line">Ctrl + d   <span class="comment"># 删除光标处的字符，同Del键。没有命令是表示注销用户</span></span><br><span class="line">Ctrl + h   <span class="comment"># 删除光标前的字符</span></span><br><span class="line">Ctrl + r   <span class="comment"># 逆向搜索命令历史，比history好用</span></span><br><span class="line">Ctrl + g   <span class="comment"># 从历史搜索模式退出，同ESC</span></span><br><span class="line">Ctrl + p   <span class="comment"># 历史中的上一条命令，同↑</span></span><br><span class="line">Ctrl + n   <span class="comment"># 历史中的下一条命令，同↓</span></span><br><span class="line">Alt  + .   <span class="comment"># 同!$，输出上一个命令的最后一个参数（选项or单词）。</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="常用alias"><a class="header-anchor" href="#常用alias"></a>常用alias</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> wl=<span class="string">'ll | wc -l'</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">'ls -l'</span></span><br><span class="line"><span class="built_in">alias</span> lh=<span class="string">'ls -lh'</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">'grep -i --color'</span> <span class="comment">#用颜色标识，更醒目；忽略大小写</span></span><br><span class="line"><span class="built_in">alias</span> vi=vim</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录并列出文件</span></span><br><span class="line"><span class="function"><span class="title">cdl</span></span>() &#123; <span class="built_in">cd</span> <span class="string">"<span class="variable">$@</span>"</span> &amp;&amp; <span class="built_in">pwd</span> ; ls -al; &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> ..=<span class="string">"cdl .."</span></span><br><span class="line"><span class="built_in">alias</span> ...=<span class="string">"cd ../.."</span>   <span class="comment"># 快速进入上上层目录</span></span><br><span class="line"><span class="built_in">alias</span> .<span class="number">3</span>=<span class="string">"cd ../../.."</span></span><br><span class="line"><span class="built_in">alias</span> cd..=<span class="string">'cdl ..'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># alias cp="cp -iv"      # interactive, verbose</span></span><br><span class="line"><span class="built_in">alias</span> rm=<span class="string">"rm -i"</span>      <span class="comment"># interactive</span></span><br><span class="line"><span class="comment"># alias mv="mv -iv"       # interactive, verbose</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> psg=<span class="string">'ps aux | grep -v grep | grep -i --color'</span> <span class="comment"># 查看进程信息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> hg=<span class="string">'history|grep'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> c=<span class="string">'clear'</span>  <span class="comment"># 快速清屏</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> netp=<span class="string">'netstat -tulanp'</span>  <span class="comment"># 查看服务器端口连接信息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> lvim=<span class="string">"vim -c \"normal '0\""</span>  <span class="comment"># 编辑vim最近打开的文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> tf=<span class="string">'tail -f '</span>  <span class="comment"># 快速查看文件末尾输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动在文件末尾加上 .bak-日期 来备份文件，如 bu nginx.conf</span></span><br><span class="line"><span class="function"><span class="title">bak</span></span>() &#123; cp <span class="string">"<span class="variable">$@</span>"</span> <span class="string">"<span class="variable">$@</span>.bak"</span>-`date +%y%m%d`; <span class="built_in">echo</span> <span class="string">"`date +%Y-%m-%d` backed up <span class="variable">$PWD</span>/<span class="variable">$@</span>"</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 级联创建目录并进入，如 mcd a/b/c</span></span><br><span class="line"><span class="function"><span class="title">mcd</span></span>() &#123; mkdir -p <span class="variable">$1</span> &amp;&amp; <span class="built_in">cd</span> <span class="variable">$1</span> &amp;&amp; <span class="built_in">pwd</span> ; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看去掉#注释和空行的配置文件，如 nocomm /etc/squid/squid.conf</span></span><br><span class="line"><span class="built_in">alias</span> nocomm=<span class="string">'grep -Ev '</span>\<span class="string">''</span>^(<span class="comment">#|$)'\'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速根据进程号pid杀死进程，如 psid tomcat， 然后 kill9 两个tab键提示要kill的进程号</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">kill</span>9=<span class="string">'kill -9'</span>;</span><br><span class="line"><span class="function"><span class="title">psid</span></span>() &#123;</span><br><span class="line">  [[ ! -n <span class="variable">$&#123;1&#125;</span> ]] &amp;&amp; <span class="built_in">return</span>;   <span class="comment"># bail if no argument</span></span><br><span class="line">  pro=<span class="string">"[<span class="variable">$&#123;1:0:1&#125;</span>]<span class="variable">$&#123;1:1&#125;</span>"</span>;      <span class="comment"># process-name –&gt; [p]rocess-name (makes grep better)</span></span><br><span class="line">  ps axo pid,user,<span class="built_in">command</span> | grep -v grep |grep -i --color <span class="variable">$&#123;pro&#125;</span>;   <span class="comment"># show matching processes</span></span><br><span class="line">  pids=<span class="string">"<span class="variable">$(ps axo pid,user,command | grep -v grep | grep -i $&#123;pro&#125; | awk '&#123;print $1&#125;')</span>"</span>;   <span class="comment"># get pids</span></span><br><span class="line">  complete -W <span class="string">"<span class="variable">$&#123;pids&#125;</span>"</span> <span class="built_in">kill</span>9     <span class="comment"># make a completion list for kk</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压所有归档文件工具</span></span><br><span class="line"><span class="keyword">function</span> extract &#123;</span><br><span class="line"> <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># display usage if no parameters given</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: extract &lt;path/file_name&gt;.&lt;zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz&gt;"</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="operator">-f</span> <span class="variable">$1</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># NAME=$&#123;1%.*&#125;</span></span><br><span class="line">        <span class="comment"># mkdir $NAME &amp;&amp; cd $NAME</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">          *.tar.bz2)   tar xvjf <span class="variable">$1</span>    ;;</span><br><span class="line">          *.tar.gz)    tar xvzf <span class="variable">$1</span>    ;;</span><br><span class="line">          *.tar.xz)    tar xvJf <span class="variable">$1</span>    ;;</span><br><span class="line">          *.lzma)      unlzma <span class="variable">$1</span>      ;;</span><br><span class="line">          *.bz2)       bunzip2 <span class="variable">$1</span>     ;;</span><br><span class="line">          *.rar)       unrar x -ad <span class="variable">$1</span> ;;</span><br><span class="line">          *.gz)        gunzip <span class="variable">$1</span>      ;;</span><br><span class="line">          *.tar)       tar xvf <span class="variable">$1</span>     ;;</span><br><span class="line">          *.tbz2)      tar xvjf <span class="variable">$1</span>    ;;</span><br><span class="line">          *.tgz)       tar xvzf <span class="variable">$1</span>    ;;</span><br><span class="line">          *.zip)       unzip <span class="variable">$1</span>       ;;</span><br><span class="line">          *.Z)         uncompress <span class="variable">$1</span>  ;;</span><br><span class="line">          *.<span class="number">7</span>z)        <span class="number">7</span>z x <span class="variable">$1</span>        ;;</span><br><span class="line">          *.xz)        unxz <span class="variable">$1</span>        ;;</span><br><span class="line">          *.exe)       cabextract <span class="variable">$1</span>  ;;</span><br><span class="line">          *)           <span class="built_in">echo</span> <span class="string">"extract: '<span class="variable">$1</span>' - unknown archive method"</span> ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span> - file does not exist"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>习惯使用编辑的快捷键可以大大提高效率，记忆学习过程要有意识的忽略功能键、方向键和数字小键盘。以下快捷键适用在bash处于默认的Emacs模式下。如果你有 set -o vi ，就处于  vi 模式就不适用了。另外下面的内容并不包含所有快捷键，只是我个人适用频率最高的几种，但相信已经可以大大提高工作效率了：</p>
<h2 id="bash-shortcut"><a class="header-anchor" href="#bash-shortcut"></a>bash shortcut</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + l   <span class="comment"># 清除屏幕，同clear</span></span><br><span class="line">Ctrl + a   <span class="comment"># 将光标定位到命令的开头</span></span><br><span class="line">Ctrl + e   <span class="comment"># 与上一个快捷键相反，将光标定位到命令的结尾</span></span><br><span class="line">Ctrl + u   <span class="comment"># 剪切光标之前的内容，在输错命令或密码</span></span><br><span class="line">Ctrl + k   <span class="comment"># 与上一个快捷键相反，剪切光标之后的内容</span></span><br><span class="line">Ctrl + y   <span class="comment"># 粘贴以上两个快捷键所剪切的内容。Alt+y粘贴更早的内容</span></span><br><span class="line">Ctrl + w   <span class="comment"># 删除光标左边的参数（选项）或内容（实际是以空格为单位向前剪切一个word）</span></span><br><span class="line">Ctrl + /   <span class="comment"># 撤销，同Ctrl+x u</span></span><br><span class="line">Ctrl + f   <span class="comment"># 按字符前移（右向），同→</span></span><br><span class="line">Ctrl + b   <span class="comment"># 按字符后移（左向），同←</span></span><br><span class="line">Alt  + f   <span class="comment"># 单词前移，标点等特殊字符与空格一样分隔单词（右向），同Ctrl+→</span></span><br><span class="line">Alt  + b   <span class="comment"># 单词后移（左向），同Ctrl+←</span></span><br><span class="line">Alt  + d   <span class="comment"># 光标处删除至字尾。可以Ctrl+y粘贴回来</span></span><br><span class="line">Alt  + \   <span class="comment"># 除当前光标前面所有的空白字符</span></span><br><span class="line">Ctrl + d   <span class="comment"># 删除光标处的字符，同Del键。没有命令是表示注销用户</span></span><br><span class="line">Ctrl + h   <span class="comment"># 删除光标前的字符</span></span><br><span class="line">Ctrl + r   <span class="comment"># 逆向搜索命令历史，比history好用</span></span><br><span class="line">Ctrl + g   <span class="comment"># 从历史搜索模式退出，同ESC</span></span><br><span class="line">Ctrl + p   <span class="comment"># 历史中的上一条命令，同↑</span></span><br><span class="line">Ctrl + n   <span class="comment"># 历史中的下一条命令，同↓</span></span><br><span class="line">Alt  + .   <span class="comment"># 同!$，输出上一个命令的最后一个参数（选项or单词）。</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="alias" scheme="http://molloc.com/tags/alias/"/>
    
      <category term="bash" scheme="http://molloc.com/tags/bash/"/>
    
      <category term="linux" scheme="http://molloc.com/tags/linux/"/>
    
      <category term="工作相关" scheme="http://molloc.com/categories/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
</feed>